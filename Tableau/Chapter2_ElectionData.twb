<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook include-phone-layouts='false' original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IncludePhoneLayoutsOptOut />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples?rev=1.3' id='Chapter2Examples' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='all_result' inline='true' name='federated.0h3ay5j07wou4u18jwcfn15sc1gt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_result' name='textscan.0dg555u0homvfa1bcyw3i1u5m01n'>
            <connection class='textscan' directory='/Users/naveedhyder/Downloads' filename='Elections_dataset.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0dg555u0homvfa1bcyw3i1u5m01n' name='all_result.csv' table='[all_result#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Constituency Name' ordinal='1' />
            <column datatype='string' name='Candidate' ordinal='2' />
            <column datatype='string' name='Party' ordinal='3' />
            <column datatype='integer' name='Votes Margin' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0dg555u0homvfa1bcyw3i1u5m01n' name='all_result.csv' table='[all_result#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Constituency Name' ordinal='1' />
            <column datatype='string' name='Candidate' ordinal='2' />
            <column datatype='string' name='Party' ordinal='3' />
            <column datatype='integer' name='Votes Margin' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Constituency Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Constituency Name]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Constituency Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Candidate]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Candidate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Party]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Party</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Votes Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Votes Margin]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Votes Margin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_1731563715761754115]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([Votes Margin])' />
      </column>
      <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Votes Margin]' derivation='Avg' name='[avg:Votes Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Votes Margin]' derivation='Sum' name='[cum:sum:Votes Margin:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Votes Margin]' derivation='Max' name='[max:Votes Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Votes Margin]' derivation='Min' name='[min:Votes Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/Users/gurukrupa/Sharada/Git/DataVisualizationAndStorytellingBook-main/Workbooks/Chapter2_ElectionData.twb Files/Data/tableau-temp 1/#TableauTemp_1mppj4i1aw2e6a1cm3g2m1gbpyne.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/12/2020 03:30:06 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>all_result.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Constituency Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Constituency Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Constituency Name</remote-alias>
              <ordinal>1</ordinal>
              <family>all_result.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>545</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Candidate</remote-alias>
              <ordinal>2</ordinal>
              <family>all_result.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>971</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Party</remote-alias>
              <ordinal>3</ordinal>
              <family>all_result.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Votes Margin</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Votes Margin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Votes Margin</remote-alias>
              <ordinal>4</ordinal>
              <family>all_result.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1041</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>5</ordinal>
              <family>all_result.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[usr:Calculation_1731563715680059394:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[avg:Votes Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[cum:sum:Votes Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[max:Votes Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[min:Votes Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Constituency Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aligarh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ballia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bardhaman Purba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bardoli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bharatpur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Buldhana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dhenkanal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eluru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gonda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hoshangabad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hoshiarpur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kanthi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Karur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kokrajhar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madurai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mahbubnagar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nandyal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nawada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nellore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajampet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shirdi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tiruvannamalai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vidisha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adilabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alipurduars&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ambala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amritsar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amroha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Araria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aska&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Autonomous District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Azamgarh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bastar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgaum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chandni Chowk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chhindwara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Davanagere&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghatal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gwalior&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hathras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kanniyakumari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khagaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mandya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mumbai-North-West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Goa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ratnagiri-Sindhudurg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serampore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitamarhi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitapur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sundargarh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theni&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unnao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ahmednagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Balurghat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Banswara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baramulla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Begusarai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhadrak&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chikkodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dhar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faizabad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fatehgarh Sahib&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gauhati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hindupur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hisar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jalpaiguri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kairana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kanker&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karimnagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Machilipatnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maharajganj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nanded&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North West Delhi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rae Bareli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sangli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solapur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tirunelveli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vaishali&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Gurgaon&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North East Delhi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alwar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Banda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bhilwara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Birbhum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chhota Udaipur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Churu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Etawah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Firozabad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hajipur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kancheepuram&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kandhamal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kurnool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldaha Dakshin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Misrikh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nagaur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nalgonda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nowgong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patiala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pilibhit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Purnia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salempur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sikar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tumkur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anantapur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Araku&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bardhaman-Durgapur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bareilly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bharuch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chittorgarh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erode&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fatehpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gaya (Sc)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jagatsinghpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jalandhar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jalaun&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamshedpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kolkata Dakshin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Krishnagiri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lakhimpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malkajgiri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meerut&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paschim Champaran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Perambalur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajgarh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajnandgaon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shirur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonk-Sawai Madhopur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vijayawada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ajmer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amreli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahraich&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangaon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Betul&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhagalpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhubaneswar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chitradurga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dharmapuri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ferozpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giridih&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hingoli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jangipur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jorhat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kaiserganj&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Khammam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Koppal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Munger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Muzaffarnagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Raichur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sant Kabir Nagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shillong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Surendranagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tirupati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valmiki Nagar&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sirsa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangalore South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beed&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chennai North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Diamond Harbour&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dumka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gautam Buddha Nagar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hardwar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jhunjhunu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karakat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mandla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mumbai-North-Central&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Navsari&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palamu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raiganj&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sasaram (Sc)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Satara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ujjain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Warangal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ahmedabad East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anandpur Sahib&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arambagh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arrah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Badaun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Balasore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barpeta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bellary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhongir&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bilaspur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dadar &amp; Nagar Haveli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hatkanangle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hooghly&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kishanganj&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kolar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mumbai-South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Porbandar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raver&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sivaganga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Siwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Srerampur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thoothukkudi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uttara Kannada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amethi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangalore North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Basti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cooch Behar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuddalore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damoh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garhwal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamirpur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamui (Sc)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jhansi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kheri&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kurukshetra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mahesana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayurbhanj&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moradabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Murshidabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Narsapuram&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Osmanabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ramtek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Secunderabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sriperumbudur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tenkasi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Udupi Chikmagalur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Delhi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Akbarpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Balaghat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bankura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhadohi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolangir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buxar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chittoor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dharwad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Firozpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Godda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jhargram&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kakinada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kaliabor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kaushambi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mahabubabad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mahasamund&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maval&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muzaffarpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nandurbar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Raigad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sagar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shimla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tiruppur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vadodara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Varanasi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Amalapuram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangalore Central&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bhind&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bishnupur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coimbatore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dahod&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dindigul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gadchiroli-Chimur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hajipur (Sc)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inner Manipur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jaunpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kachchh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kendrapara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khandwa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mainpuri&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maldaha Uttar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nagina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nizamabad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pollachi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Purvi Champaran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rajsamand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sangrur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Silchar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sonipat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Srikakulam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tura&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vizianagaram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anantnag&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arunachal East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhiwandi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bolpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chandrapur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dindori&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gandhinagar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gulbarga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jabalpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jahanabad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jhalawar-Baran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Keonjhar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Khargone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kheda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mathurapur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peddapalle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pratapgarh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ramanathapuram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samastipur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Srinagar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tezpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Udaipur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amravati&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangalore Rural&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chennai Central&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darjeeling&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Domariyaganj&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hardoi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jhanjharpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Junagadh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kannauj&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khunti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mandi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mehsana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nabarangpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Outer Manipur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Purulia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sambhal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sasaram&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Secundrabad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sultanpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Udhampur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yavatmal-Washim&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aonla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bansgaon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bidar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chennai South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dausa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dum Dum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guntur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hassan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jodhpur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Katihar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kodarma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mandsaur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mumbai-North-East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palghar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panchmahal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ranaghat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ratlam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sambalpur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Satna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sheohar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thanjavur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zahirabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allahabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barabanki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barrackpore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bijnor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chamarajanagar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dhule&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faridabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fatehpur Sikri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gopalganj&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jajpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jalgaon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kallakurichi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Khadoor Sahib&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kolkata Uttar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mangaldoi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mumbai-North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nagapattinam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nilgiris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pataliputra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sarguja&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shravasti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tripura East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Viluppuram&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Karnal&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South Delhi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Akola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Banaskantha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bapatla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barasat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bhandara-Gondiya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulandshahr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darbhanga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dhaurahra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Farrukhabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gurdaspur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jaipur Rural&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jammu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Joynagar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Karimganj&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lohardaga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mahabubnagar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mayiladuthurai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nalanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Raigarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajahmundry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saharanpur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shimoga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tiruvallur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valsad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vellore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anakapalli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asansol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aurangabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bagalkot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bargarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bathinda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhiwani-Mahendragarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bijapur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chelvella&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chidambaram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dewas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dhubri&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Durg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Delhi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ghazipur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haveri&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Howrah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karauli-Dholpur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolhapur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madhepura&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mathura&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mumbai-South-Central&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parbhani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rewa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shahdol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Goa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Supaul&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tamluk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tikamgarh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ambedkar Nagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arunachal West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bikaner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burdwan - Durgapur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chatra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dakshina Kannada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ganganagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamnagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamui&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kangra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Koraput&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kushi Nagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kutch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Medinipur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mohanlalganj&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nainital-Udhamsingh Nagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ongole&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peddapalli&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rampur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samastipur (Sc)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singhbhum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tehri Garhwal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wardha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Almora&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barmer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Basirhat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhavnagar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chandauli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Etah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gopalganj (Sc)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gorakhpur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jalna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kalahandi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kalyan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Khajuraho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Krishnanagar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ludhiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mirzapur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nagarkurnool&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Narasaraopet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nawgong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Patna Sahib&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phulpur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rajmahal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sidhi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Surguja&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tripura West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Virudhunagar&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rohtak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ahmedabad West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arakkonam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baghpat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baharampur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Banka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baramati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berhampur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chikkaballapur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dhanbad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dibrugarh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faridkot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghosi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hazaribagh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jadavpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Janjgir-Champa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kadapa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lalganj&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Machhlishahr&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madhubani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namakkal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robertsganj&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sabarkantha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shahjahanpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tiruchirappalli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ujiarpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uluberia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0dg555u0homvfa1bcyw3i1u5m01n' name='all_result.csv' table='[all_result#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Constituency Name' ordinal='1' />
                  <column datatype='string' name='Candidate' ordinal='2' />
                  <column datatype='string' name='Party' ordinal='3' />
                  <column datatype='integer' name='Votes Margin' ordinal='4' />
                  <column datatype='integer' name='Year' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Results1999To2019' inline='true' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Elections_dataset' name='textscan.161zba51384m1r1fkxxmj0y6andi'>
            <connection class='textscan' directory='/Users/naveedhyder/Downloads' filename='Elections_dataset.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.161zba51384m1r1fkxxmj0y6andi' name='Elections_dataset.csv' table='[Elections_dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Constituency Name' ordinal='1' />
            <column datatype='string' name='Candidate' ordinal='2' />
            <column datatype='string' name='Party' ordinal='3' />
            <column datatype='integer' name='Votes Margin' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.161zba51384m1r1fkxxmj0y6andi' name='Elections_dataset.csv' table='[Elections_dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Constituency Name' ordinal='1' />
            <column datatype='string' name='Candidate' ordinal='2' />
            <column datatype='string' name='Party' ordinal='3' />
            <column datatype='integer' name='Votes Margin' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Constituency Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Constituency Name]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Constituency Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Candidate]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Candidate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Party]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Party</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Votes Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Votes Margin]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Votes Margin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Elections_dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/Users/gurukrupa/Sharada/Git/DataVisualizationAndStorytellingBook-main/Workbooks/Chapter2_ElectionData.twb Files/Data/tableau-temp/#TableauTemp_17dmdbe08md3q41dv53yc13n13w0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/04/2021 01:15:26 PM' username=''>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Results1999To2019' increment-value='%null%' refresh-type='create' rows-inserted='2673' timestamp-start='2021-12-04 13:15:26.515' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Constituency Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Constituency Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Constituency Name</remote-alias>
              <ordinal>1</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>715</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Candidate</remote-alias>
              <ordinal>2</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1652</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Party</remote-alias>
              <ordinal>3</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Votes Margin</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Votes Margin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Votes Margin</remote-alias>
              <ordinal>4</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2551</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>5</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Elections_dataset.csv' id='Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA'>
            <properties context=''>
              <relation connection='textscan.161zba51384m1r1fkxxmj0y6andi' name='Elections_dataset.csv' table='[Elections_dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Constituency Name' ordinal='1' />
                  <column datatype='string' name='Candidate' ordinal='2' />
                  <column datatype='string' name='Party' ordinal='3' />
                  <column datatype='integer' name='Votes Margin' ordinal='4' />
                  <column datatype='integer' name='Year' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='FIGURE 2.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_1?rev=' id='33166941' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Delhi&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' value='68' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]</rows>
        <cols>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</cols>
      </table>
      <simple-id uuid='{E11D016A-8852-48A0-B3BA-021E914EB8DF}' />
    </worksheet>
    <worksheet name='FIGURE 2.12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituency
State: Delhi</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Examples_15837744257450/Example6?rev=' id='FIGURE2_16' path='/workbooks/Chapter2Examples_3' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='all_result' name='federated.0h3ay5j07wou4u18jwcfn15sc1gt' />
          </datasources>
          <datasource-dependencies datasource='federated.0h3ay5j07wou4u18jwcfn15sc1gt'>
            <column caption='Calculation1' datatype='integer' name='[Calculation_1731563715761754115]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([Votes Margin])' />
            </column>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1731563715761754115]' derivation='User' name='[usr:Calculation_1731563715761754115:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Delhi&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]</column>
            <column>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[usr:Calculation_1731563715761754115:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[usr:Calculation_1731563715761754115:qk]' />
                <format attr='mark-labels-range-max' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]</rows>
        <cols>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]</cols>
      </table>
      <simple-id uuid='{DB8AA934-318A-4CC7-B21A-73D0A8A52358}' />
    </worksheet>
    <worksheet name='FIGURE 2.13'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'>State: Haryana</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Examples_15837744257450/Example7?rev=' id='FIGURE2_17' path='/workbooks/Chapter2Examples_3' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='all_result' name='federated.0h3ay5j07wou4u18jwcfn15sc1gt' />
          </datasources>
          <datasource-dependencies datasource='federated.0h3ay5j07wou4u18jwcfn15sc1gt'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Haryana&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]</column>
            <column>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]</rows>
        <cols>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]</cols>
      </table>
      <simple-id uuid='{725CA1EC-9B28-4104-AA95-F31705114ACC}' />
    </worksheet>
    <worksheet name='FIGURE 2.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_2?rev=' id='33166942' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Haryana&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]</cols>
      </table>
      <simple-id uuid='{4DECD860-E0CE-4A08-96F5-BDA2F7C74F5C}' />
    </worksheet>
    <worksheet name='FIGURE 2.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_3?rev=' id='33166943' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Haryana&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]</cols>
      </table>
      <simple-id uuid='{DA0B6ECC-57FF-422E-AAB5-661A444C1C1F}' />
    </worksheet>
    <worksheet name='FIGURE 2.5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_5?rev=' id='33166944' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;West Bengal&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{4521AC1F-E55D-4D34-BD8B-6CFD4141B0D7}' />
    </worksheet>
    <worksheet name='FIGURE 2.6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_6?rev=' id='33166945' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Baharampur&quot;</bucket>
              <bucket>&quot;Jhargram&quot;</bucket>
              <bucket>&quot;Arambagh&quot;</bucket>
              <bucket>&quot;Ghatal&quot;</bucket>
              <bucket>&quot;Tamluk&quot;</bucket>
              <bucket>&quot;Bolpur&quot;</bucket>
              <bucket>&quot;Kanthi&quot;</bucket>
              <bucket>&quot;Barrackpore&quot;</bucket>
              <bucket>&quot;Ranaghat&quot;</bucket>
              <bucket>&quot;Uluberia&quot;</bucket>
              <bucket>&quot;Darjeeling&quot;</bucket>
              <bucket>&quot;Howrah&quot;</bucket>
              <bucket>&quot;Hooghly&quot;</bucket>
              <bucket>&quot;Medinipur&quot;</bucket>
              <bucket>&quot;Barasat&quot;</bucket>
              <bucket>&quot;Maldaha Dakshin&quot;</bucket>
              <bucket>&quot;Dum Dum&quot;</bucket>
              <bucket>&quot;Purulia&quot;</bucket>
              <bucket>&quot;Serampore&quot;</bucket>
              <bucket>&quot;Bishnupur&quot;</bucket>
              <bucket>&quot;Bangaon&quot;</bucket>
              <bucket>&quot;Mathurapur&quot;</bucket>
              <bucket>&quot;Kolkata Dakshin&quot;</bucket>
              <bucket>&quot;Jadavpur&quot;</bucket>
              <bucket>&quot;Bardhaman Purba&quot;</bucket>
              <bucket>&quot;Basirhat&quot;</bucket>
              <bucket>&quot;Joynagar&quot;</bucket>
              <bucket>&quot;Bardhaman-Durgapur&quot;</bucket>
              <bucket>&quot;Balurghat&quot;</bucket>
              <bucket>&quot;Bankura&quot;</bucket>
              <bucket>&quot;Kolkata Uttar&quot;</bucket>
              <bucket>&quot;Cooch Behar&quot;</bucket>
              <bucket>&quot;Diamond Harbour&quot;</bucket>
              <bucket>&quot;Krishnanagar&quot;</bucket>
              <bucket>&quot;Asansol&quot;</bucket>
              <bucket>&quot;Jalpaiguri&quot;</bucket>
              <bucket>&quot;Birbhum&quot;</bucket>
              <bucket>&quot;Maldaha Uttar&quot;</bucket>
              <bucket>&quot;Alipurduars&quot;</bucket>
              <bucket>&quot;Murshidabad&quot;</bucket>
              <bucket>&quot;Jangipur&quot;</bucket>
              <bucket>&quot;Raiganj&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;West Bengal&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{FA3C9488-6349-4831-86B2-D9B5918FF253}' />
    </worksheet>
    <worksheet name='FIGURE 2.7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Lok Sabha 2014 - Average votes margin across all states</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_9?rev=' id='33166946' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Avg' name='[avg:Votes Margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[Longitude (generated)]' field-type='quantitative' max='12235607.059175497' min='6216812.1891862359' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[Latitude (generated)]' field-type='quantitative' max='4746761.639304542' min='455394.98094455269' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[avg:Votes Margin:qk]' num-steps='5' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' />
              <color column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[avg:Votes Margin:qk]' />
              <geometry column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[Latitude (generated)]</rows>
        <cols>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{336A10C1-132D-4151-9DF1-93BA167AA1F1}' />
    </worksheet>
    <worksheet name='FIGURE 2.8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_12?rev=' id='33166947' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Haryana&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{CB0A26AF-BBAE-455B-9A0C-2EF100F98D3D}' />
    </worksheet>
    <worksheet name='FIGURE 2.9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_13?rev=' id='33166948' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Haryana&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
              <text column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#ffffff' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F5161DE9-A96E-41D2-89FD-BC3836FF7EE5}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='FIGURE 2.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='257'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50F1D9BE-B006-41BE-AB47-3D835F185FE2}' />
    </window>
    <window class='worksheet' name='FIGURE 2.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FF5B5BA-276B-46EA-9760-40E15838B80F}' />
    </window>
    <window class='worksheet' name='FIGURE 2.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D24D05E-BFF5-49F3-B8C9-01DC31BFFAF6}' />
    </window>
    <window class='worksheet' name='FIGURE 2.5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='211'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{853F4143-236F-4AAA-BADF-6BA70F54A848}' />
    </window>
    <window class='worksheet' name='FIGURE 2.6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='211'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E17497C-9AE5-40D6-9096-FD616E02CB48}' />
    </window>
    <window class='worksheet' maximized='true' name='FIGURE 2.7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[avg:Votes Margin:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[avg:Votes Margin:qk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EB44E2D-982D-4B96-8561-5FF094BEEAEE}' />
    </window>
    <window class='worksheet' name='FIGURE 2.8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42AFFCAE-6556-4CD5-9FD6-523B159C62DD}' />
    </window>
    <window class='worksheet' name='FIGURE 2.9'>
      <cards>
        <edge name='left'>
          <strip size='187'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='140'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98B1F994-7C6F-434E-AAB1-A920DA9A8B7A}' />
    </window>
    <window class='worksheet' name='FIGURE 2.12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3A62B1A6-AE5A-4C3F-A56C-4050D1CC1CD8}' />
    </window>
    <window class='worksheet' name='FIGURE 2.13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CEDA1F92-6A3C-4343-B81B-207E4DFB27F8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='FIGURE 2.1' width='192'>
      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
      nap6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.12' width='192'>
      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
      a9cSXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.13' width='192'>
      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
      /we96pJfLoJAeQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='FIGURE 2.2' width='384'>
      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
      l2drzQCdnZ289957HDlyJPvY+++/z8KFC0kkEhw9epSenh5OnjzJqlWreP/998lkMjQ1NZFM
      Junu7qa5udm2OZ93797Nvn376OjoyD524sQJ6urqqK2txefz8fHHHxOJRCgsLGT37t2Ypklj
      YyOWZbF7927bbjQ0TZMDBw5QV1eX/VxHo1H27t3L2rVr2bVrF5OTk+zYsYPKykqCwSB79+4l
      lUpx7NgxLMti586dtl1ozWQy7N+/nwULFlBWVsZHH31EIpGgtbU1+/673W62bt1KbW0tAIcO
      HSKZTHLixIk74rs7MjJCJBJh3bp1HDp0iKGhIfbu3Ut+fj6RSIRdu3YRi8UUAHayLIve3l7u
      v/9+Fi5cSCwWI51OY1kWzc3NhMNh7rnnHltrHBsbo7i4mFmzZlFQUEB7ezurVq2iuLiYFStW
      cOHCBWDqppL33nuPF1544Y7oXVNTU8OWLVvIz58aSdSyLNLpNLNnz2b16tV0d3fT2trK+vXr
      KSkpobq6muHhYQAmJyfZvXs3zzzzjG07oQ0bNrBhw4bs68diMbxeL6FQiLKyMjweD8PDwyxZ
      soTly5dz+fLl7HaePXsWy7JYtGiRLbW7XC6ee+45qqur8Xg8+Hw+2traWLNmDbNmzaK+vp7u
      7m7Gx8dZsGABK1asoL+/P1v/Z599RjAYpK6uzpb63W43mzdvprKyEpfLhd/vJxqNEgqFyMvL
      o6ysDJfLRTweZ+7cuaxatYqLFy8CU+F3/PhxIpEINTU1ttQPUFFRQV1dHdN9fAKBAJcuXWL5
      8uXU19czOjpKW1ubAsBO0zeSTHeH83g8mKbJuXPn+Oijj1i7dq3NFcLChQtpamriF7/4BU1N
      TcRisexONS8vj1gsBsCOHTvwer22nfJ+3ue7GGYyGXw+H4Zh4Ha7sSyLVCqVbaqa3pZMJsPb
      b79NTU0NgUDAjtKBL75DvLy8nIMHD/Lzn/+ckZGRqW58vw6I6eV7enrYtm0bq1evtrWrYiaT
      4Ve/+hVNTU1s2rSJRCJBKBQCID8/n4mJCTwezzX1d3Z2snPnTu6//37b69+zZw+nTp1i48aN
      BAIB8vPz+dWvfsW//du/MTExgdfrvaY7d0dHB5988gkrV660vavo4cOH+fnPf04kEsHn8001
      +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
      RUQc6v8HRnoxZ7TJ0zIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='FIGURE 2.3' width='384'>
      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
      4PF48Pl8qW++Ho8H0zTxer0kk0l8Pl/qfoHPN3lb4dM/j46OEggE8Pv9qed4vV6A1M+WZaV+
      N/V7j8eT+tnn803b5ujoKAUFBal6pv799POmLrtkZ2djWRYejwfDMKatJxgMkp+fn9qHqf2d
      uuFr2zZZWVl4vV76+/spKiqivb2dzs5Otm3bdsd9MwzjM/dhSigS4/Ufv/1F/B9Kmvjl33wb
      r+eL6XoTi8Xw+XzTPjPpJBaL4ff7U5+PdBONRgkEAml9Zh+JRO58E9jj8RAIBG773ZSpg9nU
      v4Zh4Pf/doKQT/9cWFg4bT2fPhBO/XzrG/nTj2/dls/no6Sk5DPr/vTzcnJy7rm+qctNtzIM
      g9zc3Gm/Gx4e5uTJk+Tm5vL0009jGMZd9+2ztikiMlvoqPQ5LF++nOXLlztdhojIFyI9z79E
      ROSBKQBERFxKASAi4lIKABERl1IAiIi4lAJARMSl1AzUIV6PwdfWLnS6jBn7dGe+tGRPdnb0
      eB/edyCD9O00JI+mO/YEli/Xp3tKp6NIJJIaSykdTfV0v7WzY7pQT2BnPSo9gdPz1RcRkQem
      ABARcSkFgIiISykARERcSgEgIuJSCgAREZdK33aIj4Bo3HS6hBmLJZIY3vSt37YtEokktpGe
      +xBPJEnaBp5kerbijidMLDwYhuV0KTMS+817J52bgcYSSQWAU2KJpGYEExFH6RKQiIhLKQBE
      RFxKASAi4lIKABERl1IAiIi4lAJARMSlFAAiIi6lABARcalHOgDGx8dpbW2ltbWV3t7eey4/
      OjrKxMTEtN81Nzdjmrf3Fm1tbSUajd5XHbZtc+nSpfsrWkTkIXmkA+DChQu0trYyPj5OJBK5
      5/KhUIhYLDbtdy0tLSSTyduWvX79+m3L3s3ly5fve1kRkYfhkR4KwjAMamtrqa6uBibPCA4d
      OoRpmsyfP5/169dz8uRJEokEWVlZlJSUYBgGyWSS/fv3E4lE6OjoAODo0aP09/cDsGvXLizL
      oq6uDtu2WblyJatWreKjjz5ieHgYwzDYvXs3oVCIgwcPYhjGbWcWIiJOe6TPAGzbpru7m9bW
      VgYGBsjMzGT58uU8/vjjfPLJJwDU19dTWlrK+vXrGRsbIxwO09DQQHl5Oa+88koqPKqrq1mz
      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
      ugksIuJS/weyGL3MB7HiPAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='FIGURE 2.5' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.6' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='FIGURE 2.7' width='384'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='FIGURE 2.8' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deWAV1f3//+dds9zsIYSdQEIASZS1SLVS8YtYW6u2+lHRttgVtf251dZq
      a9XWWqy0n2qrrVvpp27VqlSpuLKvYSckgUDIRkjIvt0sd5n5/YGm0qJe4N7AZV6Pv8y9M2fe
      c9XzmjlzZsZmmqaJiIhYjv1kFyAiIieHAkBExKIUACIiFqUAEBGxKOfRPqyqqiIQCPR3LZbi
      drvxeDwnuwwRsTCbZgGJiFiThoBERCxKASAiYlEKABERi1IAiIhY1FFnAYmICPT6A3T1+DEM
      E7fLgSfWjd1uO9llhY0CQETkIw61dLKhqIatpbUcbOzA2+PDME3cTgdJnhjGjxzAtHFDmZgz
      CLfLcbLLPSGaBioiArR0dPPisiJWba+kq9f/icvagKEZSVw9awLn5I+I2rMCBYCIWJppmuwo
      O8Sjr2yksa37mNa12eCzecO56bJpeOLcEaowchQAImJpK7dX8sgrGwkEjeNuI3tIKvfMm0lK
      QmwYK4s8zQISEcsqKq8/4c4foOxgCwv/vp5eX3Q9QkcBICKW1NHVy29f2nDCnf+HdpYd4uUV
      xUTToIoCQEQs6ZWVJTS2dYW1zSXrS6lp7Ahrm5GkABARy2nr7OHdzfvD3m53b4ClG/aGvd1I
      UQCIiOVs3nOQzm5fRNreUFxD96dMIz1VhBwAgUCAuro6/P5P37Hdu3fT0fHJp0E7d+6kt7c3
      1M2LiITNjn2HItZ2Y1sXBxraI9Z+OIUcAOvWrWPevHmsWbPmU5d96aWXOHDgwCcu8/TTT9PS
      0hLq5kVEwqa8rjWi7VdEuP1wCflREKtWreK6665j5cqVnH/++axZs4bi4mLKysqYNGkS+/bt
      Izk5me9973sAvPrqq3i9Xq655hrGjBnDk08+ycGDB5kxYwaXXHJJX7vbt2/ntddew+Fw8M1v
      fpNhw4aFfy9FRD7gDwTxRmj450OtndExuhHSGUBXVxeVlZV86Utforq6Gq/XS0lJCYZhcNll
      l/HGG29w9dVXs3XrVhobGwGYOHEiV155JQ899BAA55xzDvPnz+f555+nra2tr+2EhASuv/56
      xo0bx/PPPx+BXRQR+Td/wCBoRHaqZk+U3A8Q0hlASUkJNTU1LFy4kNraWoqLiwEYM2YM2dnZ
      pKenk5OTQ0pKSt8c2NGjR5Obm4vf76e1tZW//e1vpKen4/V6CQaDfW1v27aNgoICnE4nMTEx
      EdhFEZF/i491EeuO7HMw0xKj447gT/0VTNNkxYoVzJ8/n8mTJ1NQUMCqVatISkr6xPUqKirY
      t28fgwYNoqioiPT0dC699FK2b99+RNvLly/nm9/8JiUlJZSVlZ34HomIfIohAxKpa+6MaPvR
      wHHvvffe+2kLNTQ0cP7555ORkcGQIUNob29nzJgxDB48mLS0NBwOB7m5uRiGwZgxY4iPj6es
      rIzm5mbmz59PVlYWxcXFNDY2cuaZZ5KXl4fdbic3N5ehQ4fy/vvvM3z4cMaMGcOoUaP6YbdF
      xMrqm70U7q+PSNtxbifXXngmcTGuiLQfTnoYnIhYTkVtK7c/9k7YHgPxUVPGDuanXz8Pu+3U
      f0S0bgQTEcsZMSiZCaMywt6uzQYXfSYnKjp/UACIiAXZbTau/X/5OB3h7QLPzM5kcu7gsLYZ
      SQoAEbGk3OHpXHrO2LC154l18d0vTQl7qERS9FQqIhJGNpuN6y7MZ8aEE7/51O108MOrP8uw
      gZ88O/JUo4vAImJpvkCQP/1zM8u2lnM8vWFivJvbr5rBpDHRM/TzIQWAiFieYZgs21rO8+8V
      0tQe2nuB7XYbE3MG8d1LJjM4PTrm/f8nBYCIyAfavD2s2FbB8m0VHGhoxx/472miyZ4YzsjK
      4AvTc8gfnYndHh0zfo5GASAi8h+ChkFjaxdV9W20e3vx9vhJio9hyIBEBqUnkBR/ejy2RgEg
      ImJRmgUkImJRCgAREYtSAIiIWJQCQETEohQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoA
      ERGLUgCIiFiUAkBExKIUACIiFqUAEBGxKAWAiIhFKQBERCzKebILEBE51ZimSXdvgNIDTVTW
      teILBElNiGPsiHQGpyfisNuw2aL3VZAfUgCIiHxEjy/AO5v28ca6UhrbujGMf780Mcbl4Iys
      DK65II/c4elRHwJ6JaSICIeP+tu8vTz6agGbdx/8xGXjYpx864uTuGDy6Kh+KbyuAYiIAD5/
      kD+/vuVTO3+A7t4AT76xlS17DhLNx9AKABGxPNM0WV90gA1FB0Jep9cf5C9Lt9PV449gZZEV
      UgA0NTVRUFDA5s2bqaqqwjAMNmzYwN69e49Ybvny5XR2dp5QQZWVlezcufOIz6qrq9m+fTvB
      YBCA+vp6CgoK+v7+qPLyclavXn3c29+0aRMlJSXHvf7HWblyJVVVVWFvV0ROnD9o8FbBPoxj
      PJqvaexgUwhnDKeqkAJg06ZNPP300xQUFPDzn/+cNWvWUFhYSFVVFYFAoO8UqLOzE8MwPrEt
      0zSPWOejnwH4fD66u7uPWGfx4sX8+Mc/5uDBwz/0X//6V3784x/j9XoBCAaDfdutra3tC4uP
      1uLz+Y74+2h1GIZBSUkJ5eXlIdVtGMZR9+Nop4Rbtmyhrq4Ov98f1aeMIqejprYu9h9sOa51
      o3kYKORZQFOnTmXevHn4/X4aGxsBePnll3n++ecZM2YMd955J0VFRUybNo0HHniA++67j2ef
      fRaAuXPn8tBDD/Hd736Xhx56CJ/Px7hx47jxxhu59dZbiY+Pp7q6mttvv51gMEhFRQXTp08/
      YvvTpk2joKCAwYMHU1tby7BhwwB45pln2L59O729vdx1110ArF+/npKSEkzT5Pe//z2vv/46
      q1atwuVy8bOf/Yz33nuP9evX09raSnZ2NnfeeSfPPPMMmzZtoqWlhXnz5vHss8/icDhYsWIF
      d955J4888gi9vb1kZ2dz66238vrrr7NkyRISExOZOXMmM2bM4MEHH6S3t5czzjiDG264gbvv
      vpvx48fT2toKHA6uxx9/nClTpnDTTTdF/QwCkdNFfYsXf+C/RxRCUdvcSdAwcTqi7//nkK8B
      LFmyhG9961ts3LiR8847D4A5c+bw8MMPU1hYCBw++gaw2+1UVFSwe/duSktLqaqqwmazkZGR
      wU033cS1117L22+/jWEYNDY2ctddd/GVr3yFXbt24fV6aW5upqKighUrVvS1OXXqVLZu3cre
      vXvJzs7G6TycXZdccgnz5s1j6NChrF+/HoD8/HwWLlyIYRgcOHCAxYsXc9ddd5GTk8Py5ctp
      aWnh3HPPZeHChezatYuamho2bdrEwoULmTNnDgDNzc28//773H333QwbNoybbrqJ6667jlWr
      VtHe3s6zzz7Lww8/zIUXXkhTUxNpaWnceOONXHfddSxduhTDMCguLsbn8/Htb38bgMsvv5wF
      CxawZcuWcPy7E5EwMU2T4z2G/+g00WgTcgBcfPHFPP300/zP//wPL7zwAgBJSUnExcXhcDiO
      WHb69OksW7aM1NRU0tLSeOeddzj77LPZtm0bjz32GE1NTbhcLkzTxOFwkJycTHx8/BGnUa2t
      rVRVVfUN8wwcOBC/38/SpUs555xzgMNDMA888ACFhYW43W78/sMXYxISEoiNjSUmJoZAIEBD
      QwPPPfccnZ2dZGRk9NUeGxuL0+mkpaWFIUOGkJCQgMvl6qth3rx5jBgxguLiYh555BEaGhpw
      u910d3cTFxdHSkpKXxBt3bqVxx9/vG/fAJKTk/n2t79NQkJC3zY9Hs8x/OsRkf6QlhSPw358
      c2IGJMdjj9Kz+ZD3ePv27fzlL39hyZIljBw58ojv/nMoY/LkySxevJhJkyaRn5/P0qVLmThx
      IvX19bhcLpqbm/s69o8zceJEvv71r5OTk9O3jUmTJrFu3TrGjh0LHB77r6ur6xtCOhqPx8O4
      cePweDwMGjToqNcohg8fTnFxMc8+++wRF5DtH/wH0dDQgMPhoK2tjfb2dpKSkhg8eDA333xz
      3zBXfX09brf7iH2z2Wx9bYjIqWtgqofhA5OOa91JuYOi9l6AkG4Ea2xspLS0FLvdTmZmJllZ
      WdTU1PQdBRcVFXHmmWdSUlLC6NGjcbvdbNq0iTPOOAPTNCktLWXy5Mn4/X5Wr17ddxSel5fH
      rl27OPPMM2loaMDn8xEbG4vX62XEiBF926+srCQ5ORm73c6BAwc444wzKCwsZPz48ZSXl1NR
      UcHo0aOJi4sjPj6etrY2RowYwe7duxk9ejSBQIDNmzfjcrmYNGkSTU1NfbUXFxeTn59PZWUl
      JSUljBgxgoyMDLq6ukhOTiYlJQW/38+aNWtITU3F4XBwxhlnUFtbi8/n4+2332bAgAFceuml
      rFq1iszMTAzDID8/n6KiIvLz8wGoqKggNTWVhIQEiouLycvL0zUAkVOEaZosWVfK0//adkxD
      QWmJsfz2+3NITYyLWG2RpDuBj9NDDz1ETU0NaWlp3HzzzaSkpJzskkTkBHR2+/jV31ZTVNEQ
      0vIOu435X57C7GnZUXswpwAQEeHwWcDBxg5++9J69tV88pRQl8PO5eeN46pZeTgd0TvMqwAQ
      EfmAaZo0t3fz8opiVu2oxPsfd/nabTBsYDJXzBzPOfkjov6poAoAEZGPME0TwzSpa+pkR9kh
      Kupa8fmDpCbGMiFrIGNHpJMQ547qjv9DCgARkY9xtO7xdOj4P6T3AYiIfIzTqbM/mui9eiEi
      IidEASAiYlEKABERi1IAiIhYlAJARMSiFAAiIhalABARsSgFgIiIRSkAREQsSgEgImJRCgAR
      EYtSAIiIWJQCQETEohQAIiIWpcdBi4h8RFtnDzvKDlFc0UB1fRud3X6CQQOX00FGajzZQ1LJ
      H53JuBEDsNuj+3HReiGMiAhQWdfKa6t3s76omh5f8BOXtdlgUFoCF589hos+k43bFZ3H0goA
      EbG0Xl+Av72zkzc37CVoHHt3mJnm4YYvT2XimEFR9wIZBYCIWFZDq5cH/raa8trWE2rHbrdx
      9aw8rvj8eBz26Lm0qgAQEUuqberknqeXUd/aFZb2bMCXPpvL9RdPjJoQiI4qRUTCqLPLx6+f
      WxO2zh/ABJasL+WNtaVHfZn8qUgBICKWYpomzyzdRkXdiQ37HL1teO7dQkqrm8LediQoAETE
      Ugr317Nye2XE2vcFgjzz5jYCQSNi2wgXBYCIWIZhmLy6qiTinfPuqia2762L6DbCQQEgIpZR
      Xd9G4f76ftnW0o17T/lrAQoAEbGMDcUH+m1oZtveOrzd/n7Z1vEKKQAMw8Dn8+Hz+fD7/Z+a
      ar29vfj9/95x0zQ5dOgQweB/313X3t5OR0dHSMUGAgHq6/snvUXk9GKaJkUVDf22vaBhsruq
      sd+2dzxCCoB169bxne98h1tuuYWHH374UwPgpZdeYt26dX1/G4bB/ffff9SO/s033+T9998P
      qdj6+np+/etfh7SsiMhH9fqD1DV19us2IzHTKJxCeoBFZ2cnn/nMZ/jOd76DzWajq6uLt956
      i+bmZmbOnMmoUaNYtWoVQ4cOpa2tjYkTJ5KSkkIwGGTFihVUVlbS3t4OwK5du9iwYQNJSUlc
      eumlAJSWlvLEE08wY8YM8vPzWblyJbt372bUqFHMnj0br9fLW2+9RX19/VHPIkREPo0/EMTb
      079DMq2dPf26vWMV8jWApqYmSktLqampob29nYSEBMaOHct9991Hb28vf/zjH3niiScwTZN1
      69axd+9eli9fzpIlS8jNze1rp6GhgTPPPJNdu3bxzjvvAIcDJjs7mwULFtDR0UFraytTp07l
      hRdeYO/evTz++OPU1tYyfPjwU/6iioicmgzTJGj079TMU30qaMgBcOjQIXbu3ElZWRn19fXU
      1tb2XRsAiIuL4+c//zkzZszoW2fHjh1ceeWVzJgxg6SkJAzDoKKigvr6etLT02lqOnyzxOTJ
      k5k1axbJycnU1tZy8OBBmpubSU9Pp7Gxkf379zN37lymTJmC0xmdT90TkZPLYbfjcjj6dZsx
      p/hTQkOuLi8vj7lz5wLwf//3f9TX1+PxeOjpOXyK4/F4SElJOWKd7OxsXnnlFRoaGqivr8fv
      97Ns2TKuvfZaqqurSU5OBmDnzp14vd6+C8cbN24kJyeH2tpaHA4HGRkZvPDCC8TExPQFjojI
      sYhxOUhOiKG9q7fftpmZ5um3bR2PkB4Gd/DgQTo7O/uGcjo7O3nzzTcZMWIEgUCA6dOns2XL
      Fs4++2wA9u7dS2JiIhkZGbz77rsYhkFKSgpTp06lpKSE0tJScnNzSUxMxOFwUFFRQUtLC5/7
      3OdIS0tj+fLldHZ2MmzYMEaMGIHL5eKdd94hMzOT+Ph4pk6dGtlfRUROSw+/uI7VO6v6bXu/
      uWE2ucPT+217x0pPAxURy3h/y34eeaWgX7aV5InhL3deitNx6t5udepWJiISZlPHDiEp3t0v
      25p51shTuvMHBYCIWEhyQiznnTUy4ttxOexcND0n4ts5UQoAEbGUyz43jmRPTES3MXtaNkMH
      JEZ0G+GgABARS8lI8fD1OWdhj9D7e4cMSOTqCyZExfuBFQAiYjmzJo+KyBBNYrybW66YTrIn
      NuxtR4ICQEQsx2638c2LJzJrclbY2kyMc3PrlWczdsSAsLUZaZoGKiKWZRgmL60o4sX3d3Ei
      PeGQ9ER+ePUMsoemha+4fqAAEBHLK61u4ok3trCvpvmYgsDtdPDFGWO4atYE4mJckSswQhQA
      IiIcPhvYvq+OdzaVUbi/Hm+P76hh4HTYyUiJ57yzRnLh1GwGpMT3f7FhogAQEfkP3h4flXVt
      HGhox9vtI2CYuJ12MlI8jBiYzJABidjtp/4sn0+jABARsSjNAhIRsSgFgIiIRSkAREQsSgEg
      ImJRCgAREYtSAIiIWJQCQETEohQAIiIWpQAQEbEoBYCIiEUpAERELMp5sgsQETnVdPf62bKn
      ltLqJlo7e+j1B4iPcTE8M5kzszPJHpIaFa98/DQKABERwDRNGlq7eHVVCcu2ltPrD37sssMH
      JvHV88bzubNG4nRE70CKngYqIpZnmiYrtlXw1L+20dntC3m9vFEZ3Po/MxiQHJ3vBFAAiIil
      mabJP1aW8MJ7hQSNY+8OB6Ul8LOvn8ewgUkRqC6yovfcRUQkDFbtqDzuzh+grrmTh15cS7u3
      N8yVRZ4CQEQsq6HVyxNvbD3uzv9DlXVtPPvuTqJtQEUBICKW9fdlRcc05v9Jlm0tp+xgS1ja
      6i8KABGxpDZvD6t3VoatPX/A4J1NZWFrrz+EPA20vr6e5cuX4/P5OPfccxk1alQk6xIRiagd
      +w7R4/v4qZ7HY/veOnp9AWLc0THDPqQzgIMHD/L9738fgJSUFLZt24ZhGPj9fgD8fj+GYRAI
      BAgGg/T29mKaJn6/H6/Xi9/vxzRNgsEgnZ2ddHd3Y5ompmnS09NDS0sLhmFgmiY+nw+fz0d7
      e3vUjaeJSPQoq2kOe5tN7d20dPaEvd1ICSmm3nrrLS677DK+8pWv0NXVhdPppKSkhCVLlvDj
      H/+YBx98kGuvvZZ33nkHr9fLxo0befDBB7n//vtJS0ujqamJP/zhD7z66qvs3LmTuro6fvjD
      H5KYmMgvfvELEhMTyc7O5gc/+AHXX389aWlpVFdXc9ttt3HeeedF+jcQEQuqa/GGvc1A0KCx
      tYtBaQlhbzsSQjoDaGpqYujQoezbt4877riDX/7ylxiGgc93+OLJh0f4fr+fQ4cO8cwzz7B8
      +XK+8pWvsHDhQpKSkjBNky9+8YvMnj2bnJwctmzZwj//+U/mz5/PI488QllZGQ0NDcTGxrJg
      wQK+9a1vUV5eHtGdFxHrCgaNiLRrRNHIRUgBMHr0aDZt2sTYsWO54447+oZmPhzG+ehQzeWX
      X05iYiLBYBDDMAgGgwQCAQKBAA888AAOh4Nx48b1DRnFxMRgt9txOp0Eg0Hsdjt2ux2HwxGZ
      PRYRAeJiIjNOH6l2IyGkSufMmcPdd9/N7bffDkBGRgapqals2bKF+++/n8LCwv9a5+KLL+YX
      v/gFa9asoaGhAYBAIMDWrVupqqrirLPOYs6cOfzxj39k5MiRJCcnM3DgwNPiAUsicuobmZkC
      VIW1TU+sK6oeCxHyoyB8Ph+1tbXYbDYyMzNxu91UVlZis9lITEwkMTGRnp4e3G43MTExHDhw
      gNbWVtrb2/nTn/7EU089RVdXF/X19WRmZmK320lISODQoUO0tLQwevRo3G43zc3NpKWl0dPT
      QzAYJCEhOsbSRCS6FJXXc/dTywjniM3Y4ek8+L0LcNijY4Z9yOcqbrebkSNHHvFZVlbWEX+7
      XK6+f/b7/bz11lv4/X5uu+023G43breblJSUI9YZNGgQgwYN6vs7PT0dgLi4uJB3QkTkWI0d
      MYDMVA91zeG7GHxO/oio6fxBD4MTEQtbunEvf/rnlrC0lZYYxyM3X0RifExY2usP0RNVIiJh
      NmdaNmOGpZ1wOzYbfH3OmVHV+YMCQEQszG6386NrziE96cSGnL949hhmTsoKT1H9SAEgIpY2
      MNXDPd84j6EDEo95XZvtcOd//cWTsEfhDEZdAxARAZo7uvnr0u2s3lkV0uOhUxNj+cZFZzFz
      YlZUdv6gABAR6WMYJqUHmninoIwdZYdobOs64nu308GIzGQ+d+YIPj8pi5SE2JNUaXgoAERE
      jqKrx09jexdtHT14e/ykJsYyIDme5ITYqH4R/EcpAERELOr0iDERETlmCgAREYtSAIiIWJQC
      QETEohQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIUACIiFqUA
      EBGxKAWAiIhFKQBERCxKASAiYlEKABERi1IAiIhYlAJARMSiFAAiIhblPNkFiIicikzTpK2z
      h10VDXR2+RiZmUzOsDScDjs2m+1klxcWIQWAz+fDMAxiY2MJBoP09PTg8XjYv38/o0aNOm1+
      DBERONz5F+6v57HFm6hr7sQ0weW0c07ecL5zyRQS4twnu8SwCGkIaNWqVTz33HMA1NbWct99
      9wHw9NNPR64yEZGTpKWzhz+8WkBt0+HOH8AfMFi5vZLXVpdgfvhhlAvpDCAQCODz+QAwDIOe
      nh4ARo0aBcB7773H8uXLGTlyJPPmzeMf//gHhYWFZGVl8Z3vfIeCggIANm3axNe+9jVSUlIi
      sS8iImGxc98h6lu8//W5CazbdYCvfG48ntPgLCDkawArVqygpqYGr9dLIBAA4N133+VrX/sa
      Tz31FL/85S/p7u4GYOzYsZx//vk88MAD7Ny5kz179rB48WKuvfZa4uLiIrMnIiJh0ubt4eOO
      8bt6/PgCQTz9WlFkhBwAEydO5JprrqG2tpbnn3++73O3282VV17JQw89xLBhw/jBD37A4sWL
      cTgctLa29oXCNddcwxVXXBH+PRARCbMRmck47DaCxn/HQGaaB0+s6yRUFX4hTwNNSUkhKyuL
      oUOHHnHRNxAI4PF4uPvuu6msrGTXrl00NDRw3XXXkZyc3LdcYmJieCsXEYmQCVkZTMkd/F+f
      x7gcXHbuOFxOx0moKvwc9957772ftpBpmqSmpjJ06FAAXC4Xubm5BINB8vLyKCwsZNmyZXz2
      s59l1qxZtLa2UlhYyMSJExk3bhxJSUlkZmaSnp4e6f0RETlhdruNs3IG0eML0NrZg8NhY/jA
      JOZdNJGzJwzDbj89bqGymafL5WwRkTAzDJOO7l58/iCJ8THEuByn1bR3BYCIiEWdHucxIiJy
      zBQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIUACIiFqUAEBGx
      KAWAiIhFKQBERCxKASAiYlEKABERi1IAiIhYlAJARMSiFAAiIhalABARsSjnyS5ARORU5QsE
      CQQMAGw2iHE5sdtPn5fCKwBERD5gmiZN7d1s2l3Dlj21HGzsoKOrFwCHw86A5HhyhqZx9oRh
      nDEyA7fLcZIrPjE20zTNk12EiMjJ1tDq5ZWVJazaUYm3x/+py4/ITOaKmeM5N38EDkd0jqYr
      AETE0kzTZH3RAZ58YyvNHd3HtK4NmDZuCDdePo3UxLjIFBhBCgARsbTFq3fzt3d2EAgef1c4
      fGASd849l2EDk8JYWeRF53mLiEgYrNxewaK3tp9Q5w9QXd/Ob15cS1tnT5gq6x8KABGxpOr6
      dh5bvJlwjYFU1LXxxBtbMIzoGVRRAIiI5ZimyZNvbKHHFwhru2sLq9m852BY24wkBYCIWE5x
      RQOF5fVhb9cEXl1VQiBohL3tSFAAiIjlvL+1PGJDNburGqk+1BaRtsPtpAWAYRj4/Z8+11ZE
      JJx6fQEKy8J/9P8h04QtpbURaz+cQgqAwsJCVq1ahWma/OMf/6C4uPiEN7x7926efPLJE25H
      RORYNLZ1HfN8/2O190BTRNsPl5AeBVFTU0N1dTVpaWm89957fPGLX6SpqYn9+/eTkpJCTk4O
      jY2NuN1uGhoaGDRoEC0tLXR0dGAYBhMmTKCjo4N9+/bhdrsZP348Pp+PtrboOE0SkdNHfas3
      4mP0dc2Ht+E8xe8QDvlZQFVVVWzatIkf/OAHxMXF8dxzz2GaJmvWrOHmm29m69at7Ny5E5/P
      x4033shPf/pTZs6cyYYNG/jVr35FYWEhhw4doqioiDlz5jB8+PBI7peIyFH1xwXaoGEQDffY
      hhxP1dXVtLS0MHDgQAAmTpxIS0sLABUVFZimybBhw/jDH/5AYmIiEyZM4LbbbmPy5Ml0dHSQ
      l5dHd3c3pmlSVlYWmb0REfkUdlvkn+Zpt9mw9cN2TlTIAXDOOefwrW99i4ULF9Le3s7vf/97
      5s2bx5w5c/qWmTp1Kk7nv08qbB/8CIFAgN/+9rd86Utf4pprromKZBSR01NGijwastEAABSE
      SURBVCfij3QekBx/yg//QIgB4Ha7iY2NZfbs2Xg8HjZu3EhiYiILFixg5cqVxMTEEBsbi8vl
      AsDhcJCQkABAfHw8MTExDB06lEcffZSXXnqJ+Ph4nE4ncXHR9/AkEYluaUlxJMXHRHQbWYNT
      Itp+uBz3w+ACgQB+vz/kTtwwDLq7u4mPj4+KUyMROX09+OxqNhTXRKz9B749i7zRAyPWfrgc
      9znKsR7B2+12PB6POn8ROelmTR5FpHqiEQOTyB2eHqHWw+vUH6QSEQmzSbmDyR6aGpG2v3zu
      2Kh5U5gCQEQsx+10MO+iiWG/UDshK4OZZ2WFtc1IUgCIiCXljR7IpeeODVt7SZ4YvnfplKg5
      +gcFgIhYlM1m47rZZ/KF6Tkn3FZCnJu7v/Y5RmZGx+yfD+mVkCJiaYZp8o8Vxfx9WdFx3SU8
      LCOJH149g1GDI3NNIZIUACIiHH6M86Kl29lT1YQRQrcYF+Pkos/kcNWsCcTFuPqhwvBTAIiI
      fCBoGBSVN7BqRyW7yutp7eyh1xfEME1cTjuxbifDM5KYNn4o5501kgHJ8Se75BOiABAROYpA
      0KC1s4fObh+BoEGc20mSJ4bECN9F3J8UACIiFqVZQCIiFqUAEBGxKAWAiIhFKQBERCxKASAi
      YlEKABERi1IAiIhYlAJARMSiFAAiIhalABARsSgFgIiIRSkAREQsSgEgImJRCgAREYtSAIiI
      WJTzZBcgInIqMk0TXyBIu7eXQNAgPsZFQrwbu82GzWY72eWFhQJAROQjTNPkUHMn72zez5Y9
      B2lq78YwTGLcTkYNTmHmWSM5+4xhuF2OqA8CvRFMROQDQcNg5fZK/u/tHbR09Bx1Gbvdxpmj
      B3LjZdMYmOqJ6hBQAIiIcPjI/93N+3nijS34A8anLj8yM5l7r59JWlL0vhheF4FFxPJM06S8
      tpVFS7eH1PkDVB5q48klWwkaoS1/KgopAAzDIBgMAhAMBvv++Vi0trbS1dV13N+LiESKacI/
      1+7G2+M/pvU2Ftew90BzhKqKvJACYN26dbz22msEg0EWLFhAUVHRMW/o73//O5s3b/7Y7198
      8UUKCgo+sY21a9eyZ8+eY962iMgnae/qZfveQ8e8XtAwWb+rmmgdSQ9pFlBnZyctLS28//77
      dHV1MWHCBN5++21mz55NbW0tTU1NpKSk0NraSm1tLRMmTGDPnj3MmjWLkpISPB5PX1sNDQ0U
      FxczefJklixZgs/n48ILLwRg7969lJaWMnHiRKZNm8b+/ft5++23yc3NZdKkSbz00kukpqZy
      3nnnMWrUKLxeL9XV1UyaNIni4mL27t1Lbm4uM2fOxG7X6JaIhKauqZP2rt7jWnfvgWYM08QR
      hReDQ+4lN27cyKJFi7jxxhtxOBz87W9/IxgMUlZWxpo1a9izZw/3338/BQUF+Hw+XnzxRUzT
      pKCggJKSEgB6enpYsGABHo+HV199lZqaGnJycmhuPnwKVVNTw5AhQ/jTn/6Ez+fjnnvuYcaM
      GSxdupQ9e/aQlJTEgAEDGDhwICUlJdx3331s3boV0zTp6upiypQpPP300xw8eDAyv5aInJa6
      ev3HfRR/eN0wF9RPQg6AAQMGEBsbS1NT08cuM3HiRO666y4yMjKO+v2jjz7KwIEDmTJlCpMm
      TaK0tJR//etfxMcfvor++c9/ngsuuAC73U59fT3Nzc289957dHd309DQwMiRIxk3bhx5eXkA
      TJkyhZ/85CekpaVRWlrK66+/TldXF21tbcfyG4iIxXliXcc9nfPwumEuqJ+EHADZ2dnccsst
      /O///i9er5dgMEh9fT2VlZV9ywwePBiH4/DNEV6vl6ampiOOxufNm9c3zBMXF8evf/1rpk6d
      yiuvvPJf20tJSSEmJoYrr7ySO+64g0mTJuF2u6moqKC7uxuAIUOGYLfbKS8vp6amhttuu43h
      w4efyO8hIhY0KD2BZE/Mca2bOzwde5QmgOPee++999MW6uzsxO12M2PGDHw+H16vl4EDB/Lc
      c88RFxdHbm4ugwYNwu12M3r0aFwuFxUVFSxZsoS0tDTy8/Nxu91kZ2dz/vnn8+6775KQkMCf
      //xnqqqqmDt3LjabjcGDBzNgwABqa2uZMWMGgwcP5tlnn2XXrl3k5+eTm5vLkiVLqKqqYty4
      ccTGxpKVlUV8fDwbN25k7dq1fWcYycnJ/fDzicjpwO10UF3fTnlt6zGt53TYmPeFSQxIjs57
      AXQjmIhYnmmaVNW38dMnl9He5Qt5vZkTR3LLFdOjdtJJdFYtIhJGNpuNEQOTuf7iScS4HCGt
      kzM0leu/MDFqO3/QGYCISB/DMFi7q5q/vrWDhtaj35jqdNiYnDuY714yhQHJ8XoWkIjI6cI0
      TRrbuli2tZzNe2ppaPUSDJrExTjJHprKeWeNZEruYFxOPQ1UROS0ZJomgaBBR5ePoGES63b0
      TReN9o7/QwoAERGLit6rFyIickIUACIiFqUAEBGxKAWAiIhFKQBERCxKASAiYlEKABERi1IA
      iIhYlAJARMSiFAAiIhalABARsSgFgIiIRSkAREQsSgEgImJRCgAREYtSAIiIWJQCQETEohQA
      IiIWpQAQEbEo58kuQETkVPTh69IN0wSTD14Gf/i70+Wl8AoAEZGPME2Tji4fO8sOsbPsEAeb
      OvAHDBLj3eQMTWPK2MFkDUrB6bBHfRDYzA9jTkTE4gJBg9U7K3l5eTEHmzo4Wu/odjmYOnYI
      112Yz5D0xKgOAQWAiAjg8wd44b1dvLGuFH/Q+NTlB6V5uPmKsxk/ckDUhoAuAouI5RmGyeI1
      e1i8dk9InT9AXbOX3/59PQcbO4jWo2gFgIhYmmma7K5q5B8rijGMY+vKG9q6ePKNrQQCwQhV
      F1kKABGxNMM0+eea3fT6j68T37n/ELvK68NcVf8IKQDKy8v561//ynPPPcf27ds52mWD9vZ2
      fve73x3xWWdnJ01NTR/b7mOPPUZzc/MxliwiEj6tnT3s2HfouNcPGiZrC6uP2i+e6kIKgD17
      9lBcXIzH42HhwoVs3rwZ0zRpbW3l0KFDGIZBIBBg7969dHR00NjYiGEYrF69mmeffZaOjg5M
      06Szs5P6+np8Ph8AZWVl+Hw+/H4/3d3dEd1REZGjqaxro8cfOKE29tU0EzzG4aNTQcj3AWRl
      ZXHppZdy8OBBampqCAQCPPHEEyQkJJCXl8eVV15JTU0N9913H/v27eOee+7h1VdfpbW1Fa/X
      y7e//W0efPBBXC4XPp+Phx9+GIBgMMiCBQs499xz+fznPx+p/RQROaqWju6jTvc8Fm3eXoJB
      A6cjukbVQw6AZcuWsWvXLkzT5KqrruJXv/oVP/vZzxg6dCjz58/nkksuYfDgwfzmN7/h6aef
      pr6+nmuvvZbdu3czf/58AoEAV1xxBeXl5Tz//PP4fD5M0+TPf/4z6enpzJw5M5L7KSJyVA77
      iU/htNtsEIUzQUOOq2nTpjF+/HgGDx5MUlIShmHgcDj65r+apondfvjOOIfDARy+XfrD4Z71
      69fz9ttvM3XqVNLS0vrGy+x2O729vRhGaFOvRETCKSPFw4lmwIDkeJz26Dr6hxADIDU1ldzc
      XObPn09aWhrLli3j8ssv54UXXmDRokXMmDGDxMREcnJyAMjMzCQ1NZXRo0dTWVnJa6+9Rlxc
      HA6Hgy1btpCWlobD4SA7O5ubbrqJ+Ph4duzYEdEdFRE5mpGDUkhLij+hNs7KzsQehjOJ/nZC
      dwIbhoFhGDidHz+SZBgGpmnicDgIBALY7XbsUZiUInJ6Mk2T19eW8syb245r/bSkOBbeOPuE
      Q+RkOKGe2G63f2Ln/+EyHw4JOZ1Odf4icsr5f1NHMX7kgGNez26zcc0FeaQmxkWgqshTbywi
      lmaz2YiPcfGDr36GoRmJIa9nt9n48jm5XDBlVNQ+C0gPgxMR4fBQUF1zJ4//czOFZfWH3wPw
      MTyxLq78/Blcck4uzg9GOKKRAkBE5AOmadLrC7KuqJr3t+yn8lAbXT1+TBOcDjspibFMzMnk
      C9PHkDU45fD0zyimABAR+Q+maRI0TFo6umnp6MYfNPDEuhmQHE98rAsb/347WDRTAIiIWJQu
      AouIWJQCQETEohQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIU
      ACIiFqUAEBGxKAWAiIhFKQBERCxKASAiYlEKABERi1IAiIhYlAJARMSiFAAiIhalABARsSjn
      yS5ARORUY5omJtDV46e1owdfIEhivJvkhFhcDjs2m+1klxgWCgARkY8wTZMDDe0sWVfK1r11
      NLV3gQkup4OsQclcMGU05+aPIC7GGfVBYDNN0zzZRYiInAoMw2T1zkqeeXM7rZ09R13GZoNJ
      OYO44bJpZKTER3UI6BqAiAiHj/w37a7h8X9u/tjO//BysHVvHf/7jw14e/z9WGH4hRwAXq+X
      2tpa/P7DO1xeXo5hGBErTESkP7V5e/nrWzvo7g2EtHxReQP/WldKNA+ihBQAW7du5YYbbuCh
      hx7ijjvuoLe3l0WLFhEMBiNdn4hIxJmmycbiA9Q0dhzTeksL9oUcGKeikC4CL1++nGuuuYaL
      LroIr9eLy+UiKysLu93Oyy+/TE5ODgUFBVxyySUsWrQIv9/PddddR09PDy+//DIA8+bNIysr
      K5L7IiJyXEwTtpTWHvN6rZ097Ktp5szszAhUFXkhnQHMmTOHp556ip/85CdUVFRgs9l4//33
      MQyDlStX8thjj5Gfn8/ixYsZMmQI8+bNIyYmhri4OL7xjW8wZcoUFi1aFOFdERE5PoGgQUNr
      1zGvZ5pQ19wZgYr6R0hnABMmTOCFF15g/fr13H///Tz11FN93zkcDu68806ys7PJzMzkscce
      Y8OGDdx4441UVlayYsUK4uPj6e3tjdhOiIicqOOdyxPFk4BCC4BXXnmFtLQ03G43MTExR3xn
      t9vxeDwANDQ08L3vfY+NGzeyevVq9uzZw9y5c6murmbTpk3hr15EJAycDjuD0hIoO9hyTOvZ
      bTAkPTFCVUVeSAGQn5/Pu+++i8/n40c/+hGJiYl8+ctfxm63M3v2bBISEgBITEzk9ddfx+l0
      MnfuXGpqali6dCl5eXlccMEFEd0REZHjZbPBlLGDWbermmOZ05OeHE/2kLSI1RVpuhFMRATo
      6Orlp08to6KuLeR1rv/CRC49d2zU3gymG8FERICEODffvHgSCXHukJafMnYwcz6THbWdP+gM
      QESkj2GabN1Ty59e3/yxs4LsNhsz8obx3UumkOyJUQCIiJwuTNOkqb2btwr2saHoAHXNnZgm
      xLgcjBsxgNnTRjNl7JDT4qmgCgARkaMwTZOgYeLt9uELBEmIcxPjcmK3R3en/1EKABERi9JF
      YBERi1IAiIhYlAJARMSiFAAiIhalABARsSgFgIiIRSkAREQsSgEgImJRCgAREYtSAIiIWJQC
      QETEohQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIUACIiFqUA
      EBGxKAWAiIhFOU92ASIipyLTNAkEDbw9fnz+IJ44F3FuFzYb2Gy2k11eWCgAREQ+wjRNev1B
      Vm6v4N3N+6k81IZhmHhiXZyVk8ll545j1JBU7KdBCNhM0zRPdhEiIqcC0zTx9vh5fPEm1u6q
      5mi9Y2K8m+99eQrn5o+I+jMBXQMQEfmAYZr8fdku1hYevfMH6Ojy8efXt7D/YAvRfvwcUgC0
      trbyu9/9jh/96Ee8+OKLBIPBkBq/5ZZbQv6BioqKaGtrC2lZEZFIONjYwftbyvm0Xqujy8c/
      1+z52JCIFiEFwIsvvkhycjLf//73SU1NxTAM2tvbWbduHdXV1QA0NDRQV1fHpk2bqKurA+Cq
      q64CoLKykv3797Nt2zb8fj+mabJ//342btxIY2MjHR0dLFq0iJUrV1JTUxOhXRUR+XimabJr
      fz3eHn9Iy+8oq6PHF4hwVZEV0kXgtLQ0li9fzvjx45k1axbBYJDbb7+dSZMm8eSTT/KjH/2I
      tWvXUlBQwKhRoygvL+exxx7jkUceYfr06fzqV79i5MiRNDU1kZuby1VXXcVLL71ESkoKjzzy
      CPfccw81NTVs3boVj8fD0KFDI73fIiL/paGtK+RlO7v9eHt8xMe6IlhRZIV0BvDVr36Vq6++
      mpdffpnbb7+dkpIShgwZwg033MDcuXNZtWoVpmly1VVXceuttxIMBjEMA8MwAHC73Xz3u9/l
      jjvuYOfOnSQkJDB69GgaGxtpb28nNTWVvLw8vvrVr3LBBRdEdIdFRD5OrDv0iZF2uw23yxHB
      aiIvpACorq7m7LPP5sEHH6StrQ2/309nZyeGYdDa2kp8fDxweG7sx10VN02ThoYG4uLiWLNm
      DXv37uXWW28lKyvrcCF2Ox0dHX2hISLSn2w2G2OGpeGwhzazZ2RmMvEx0Xv0DyEOAa1bt46l
      S5dis9mYPHkykydP5t133+XWW2+lt7eXBx54gKVLl+JyHf4xEhMTsdlsJCYmAtDT08O9995L
      Z2cnt956Kx6Ph6KiIn7xi1/Q2tqK3W5n+vTpPProo5SXl3PttddGbo9FRD7GuBEDyBmaxp7q
      pk9czmaDC6dl43RE90TKkO8DCAQCBINBYmJigMNH9B0dHXg8HhyOjz8NMgyDW265hZ/85Cdk
      ZGTgdB7OnK6uLtxud9/fAN3d3Tidzr4gERHpT6ZpsruqkQXPraWls+eoy9iAc/KH8/99dTox
      xzBkdCqK+I1gpmmyfPlyZsyYQVxcXCQ3JSJywj4Mgb+8uZ19Nc0EjX93kZ5YFxdMGcVVs/Lw
      xLqi/kYw3QksIvIfTNOk2xdgT1UjpdXN9PgCDEyJJ2/0QIYMSMT+Cdc7o4kCQETkE3y0izwd
      Ov2Piu4BLBGRCDvdOv2Piu5L2CIictwUACIiFqUAEBGxKAWAiIhFKQBERCxKASAiYlEKABER
      i1IAiIhYlAJARMSi/n+/9wmuudEbRQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='FIGURE 2.9' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3hcZ5U/8O+905tGvfduybZsS+69xLHTbEIaSYCEEEKylKUsdVmW8GOB
      bBaWhLAEAkkgjZDenDjuvUmWLVm2epdmVGY0mqJp997fH3IU2+rSjO6U83kengfHmrlHluae
      +77vec/LCIIggBBCSNhhxQ6AEEKIOCgBEEJImKIEQAghYYoSACGEhCmp2AEQQkIPx/EwWYfQ
      Z3HA0G9Dn8UBk9UJi80Jq8MFt5eD2eYEz39ag8KAQaRWAYmERaRWCa1KjpgINWL1KsRFahAf
      pUGsXg25TCLidxZaGKoCIoTMVr/Fgdr2fjR0mtDQYUKr0YIhlwcuD+eza8ikLJRyKVJidchN
      iUZOSjQK0mKQEhfhs2uEG0oAhJBpc3s4nG8y4my9AecaDOjut8HL8XMeh4RloNcosDAnAYvy
      klBWkASdWjHncQQrSgCEkEkJggCn24tzDUYcqGzB2XoDnG6v2GGNwjIMijJjsXp+OpYXpSA6
      QgWGYcQOK2BRAiCEjMvL8WjsNGFPeROOVXfANuQWO6Qpk7AMygqTsWlxFhbnJUIhpyXPa1EC
      IISM4nB5cOJCBz44UY+GDhOC/SaREKXB1qU52Lg4k0YFV6AEQAgZMehwYe+ZJnxwoh49Aw6x
      w/E5jVKGzaXZuHlVPuIi1WGfCCgBEELgcHrw0elGvHesDn2W0LvxX0ujlGHtwnTctqEIcZEa
      scMRDSUAQsIYx/E4XNWGV/ZWo7vfJnY4c06nkuPm1fm4cWU+tCq52OHMOUoAhISp5m4z/vxu
      BWpaeoN+jn+2kmK0+OK2EqwoSg2raSFKAISEGZfHi3/su4C3j9SKUrsfqBgGWFaYgod2lCIm
      Qi12OHOCEgAhYUIQBNS19+P3b55Gm9EidjgBS6uS44EbF2PDokywbGiPBigBEBIGPF4O7xyt
      xct7quGhp/4pWVeSjgdvLkVECO8spgRASIgzDQ7hyTdOoaKuW+xQgk5KrA7/evsK5KfFiB2K
      X1ACICSE1bf34/F/HIfBFH4VPr6iVsrw4I1LsGFx6E0JUQIgJEQdPt+Kp944jaEA7NkTbCQs
      gx1rCnDPdQshlYTOMSqUAAgJMbwg4N2jtXj+w3PgePp4+woDYF1JBh7eWQaVQiZ2OD5BCYCQ
      EOLlePxjXzX+eaAG9Mn2j4U58fjB3WugCYGNY5QACAkRXo7HM+9VYNfJBrFDCXnzs+Lw4y+s
      gzrIRwKUAAgJAV6Ox5/fLceHpxrFDiVs5KdG42cPbAzqJBA6qxmEhCmO5/H3j87RzX+O1XWY
      8Iu/HYI9iM5IuBYlAEKCmCAIeP3gRbx9pFbsUMJSdXMvfvPqCbiCtNKKEgAhQWxfRQte2Vsd
      9s3cxHSmtgt/+eBsUPZVogRASJA632jEH98+TaWeAWD36Ua8dfgSgm1JlRIAIUHIYLLhN68e
      h9sbfE+doUgQgFf2VeP0pS6xQ5kWSgCEBBmX24vf/OM4zFan2KGQK3i8PH7/xil09g2KHcqU
      UQIgJMi88PF51Lb3ix0GGYPF7sITr52EM0gWhSkBEBJEjl9ox3vH68UOg0zgUls//rGvOijW
      AygBEBIk+i0OPPNeBXha9A14bx+pRU1Lr9hhTIoSACFBgON5PP/hOfRZhsQOhUwBxwv4/Zun
      A34qiBIAIUGgvLYbh8+3iR0GmYauPite2VstdhgTogRASIAbcnnw/IfnwAfBnDK52vvH69Hc
      bRY7jHFRAiAkgAmCgHeO1qKjN3hKC8mn3F4Of33/LDg+MPdrUAIgJID1W4bw1mHq8xPMqpp7
      AnaDGCUAQgLYq/svwOHyiB0GmQVBAF7aUwWXJ/AWhCkBEBKgOnoHsfsMtXgOBa0GC/afbRE7
      jFEoARASoF4/eJGOdQwh7x2rC7hRACUAQgKQwWTDkSoq+wwl7T2DOFnTKXYYV6EEQEgAev94
      HdweTuwwiI+9e6wOHm/g/FwpARASYAbtroCcLyazV9/ej4utfWKHMYISACEB5khVG6yO4D1n
      loxPALDrZH3ANIqjBEBIAOF4HnvKm8QOg/hRRZ0BJmtg9HSiBEBIAGnuHkBL94DYYRA/crq9
      OHwuMBb4KQEQEkAOnG2hM37DwJGqtoBoD0EJgJAA4XJ7A7ZlAPGthk4TjCa72GFQAiAkUDQb
      BmA028QOg8wBQRg+3U1slAAICRCnL3XRzt8wEgijPUoAhAQAjuNRWW8QOwwyh+ra+zFod4ka
      AyUAQgKAyTqENqNF7DDIHOJ4AeebjKLGQAmAkABQ194PdwC1CCBzo6qpR9TrUwIgJABUN/eK
      HQIRwQVKAISEN54X0NhpEjsMIgKDySbqOgAlAEJE5nR70dlnFTsMIgIPx6PVKN7Ob0oAhIjM
      aLbBNkTN38JVY6dZtGtTAiBEZK1U/RPWOvsGRbs2JQBCRNbZK94NgIivo4cSACFhi+b/w5tB
      xJ5AlAAIEREvCDANBkZveCKOIbcHgw5xKoEoARAiIp4XYA6Qw0GIODxeHoM2SgCEhB2eFzBo
      pwqgcObleFjsTlGuTQmAEBHxggCHyyN2GERkNqc4DwGUAAgRkdjdIElgcLq8olxXKspVCSEA
      AC8Xeg3gJCyD+CgNWIaBwWSjIy6nwCLSGgAlAEKIz8gkLL526zLwggCO53G2zoCj1bM/+Ypl
      GPAhfFoOJ9L3RgmAEBFZHaG1ALwgOx52pwd/fq8cLMMAAEoLkiCTSHChuQefWVeIcw1GFKTH
      YEF2Ah5/5Ri+cnMpwAAWmxPvHqvDvVsXQquS492jtSiv68a9WxciI16Pzn4rXt13AV//7HJ4
      OR5RWiX+87kD8HjFP1w9WNEaACEiYi7fJENFXJQGLYYB5KZE42df2ohbVhdAp1JAp5ZDImER
      H6mBRilHWUEyfv/GKayan4bq5h48/XY5YvUa9Fkc2FvejIstvVizMB3xURokRGnxyxePQKOU
      IyNBD5mUxZOvn8SAzYlIrVLsbzmoUQIgRERalUzsEHyqs9eKosw4NHSa8PrBGshlEgCjE92B
      ylYYzXbIpCy8HA8BAhgGWLcwA8VZcWjoMoMBA5lEAqfbC44X4HR7IZFI4OV4uDwcPF4ODEIr
      gc41mgIihPhMTUsvlhel4OcPbATLMNhT3gSj2YaHbilFWUEyOJ4HJ/DguOFpmwOVrXh4RxmW
      5CdBIZfC7vIgPzUGiVFauDxedPVZoZBJ8N27VoFhgFbjwMiUj+dy4ggFElacRMYIQgivrBAS
      4HoH7PjyY++KHYbPySTs5YXg4duLSiGFy82NWshNT9AjPzUGsZFq6DUKPP1OOVQKKYauKYvU
      quQh3TL7O3euxLqSjDm/Lo0ACBGRTq0QOwS/8HBXL8xee0P/RN+AA4lRGljszpHzccf62lC+
      +QOAWinOVCAlAEJExDIMNEoZ7M7w3A3scHlw6lKX2GGITqMQJwHQIjAhImJZBnqqZAlrMgkL
      nUackSAlAEJEJGEZROkoAYQzqZSFnhIAIeGHYRhEaVVih0FEpFbIoFXJRbk2JQBCRJaeECF2
      CEREybE60TYEUgIgRGQpsZQAwllqnHg/f0oAhIgsNZ4SQDhLE/HnTwmAEJHFR2qgU4szB0zE
      xTBATkq0aNenBECIyJRyqajTAEQ8MqkE6fF60a5PCYAQkbEsg4L0WLHDICJIj48QbRcwQAmA
      kIBQmBYjdghEBIUiJ35KAIQEgPy0mJHWySR8FGfFi3p9SgCEBIBInRKZCeLNBZO5J2EZLMpN
      FDUGSgCEBAAJy2JpYYrYYZA5VJQZJ+r8P0AJgJCAsSgvESF2QiSZwNLCZLFDoARASKDISooU
      tSSQzB2GAVYWp4kdBiUAQgKFTCrB8qJUscMgc6AgLRaxerXYYVACICSQrChOgVRCH8tQt2FR
      BliRzgG+Ev2mERJAshKjkE97AkKaSiENiOkfgBIAIQGFZRlsWpIpdhjEj1YUpUKvDYyzoCkB
      EBJgVhWnIZKOiQxJLMPg+mU5ovX/vxYlAEICjEYlx3Vl2WKHQfygKDMWeamBM8VHCYCQALRt
      eS6UcqnYYRAfu3FlfkAt8gdOJISQEbF6NY0CQkxeanRAbP66EiUAQgLUZ9YVUoO4EMEwwK3r
      5kEmDayfJ40xCQlQMRFqbFuWg3eO1okdCpml3JSxn/4FQYDZ6kSzYQAt3QPo7rfCNDgEL8cD
      GK4Ki9WrkRijRWZCJDITIxGjV/lsEZkSACEB7PaNxaisN6CtZ1DsUMgMKeVSfPnGJSNP/063
      F8eq29HcbUZtWz/aewfhcHqm9F4qhRSZiZHISYlGTnIUVhSnQq2YeUM5RhAEYcavJiREDbk8
      cLq9Y/6dVMJCp567Ou6Kum48+txB0Ac1ON2xsRj3XLcAHi+HfRXNePPwJXT323zy3nF6NXau
      LcTWpTkzmi6kBEDCjpfj0dVnRVefFZ19g+gZcKDf4oBpcAhWhwsWuwu8IGC8TwaD4aG5WiGD
      TqNArF6FKJ0K8ZEaJMVokRoXgZS4CJ9V8fC8gP997QQOVrb65P3I3EmI1uB/v74Nnb2D+MOb
      p9HUPeCX62QnReLhnUunvYucEgAJWYIgwMvxMJhsuNjah9r2fjR1mdFmtIzMsfoLwwBJ0Trk
      pEQhLzUGhRkxyEyIhFwmmdH8be+AHd95ajcsdpcfoiX+8qN716Crz4oXPq7y+++cRMLg7s0L
      sHNt4ZRLTSkBkJDC8Tz6B4dwvsGIygYDqpt7YLY6xQ4LwPD8bWF6LBbnJaIkNxHJsTrIp1EV
      sre8CU++foqmgoLE6vlpUCll2HOmaU6vu2FRBh7euXRKI1BKACTocfzwlM7pS104WdOJ+o5+
      cHxg/1ozAJJjdVg2LwWr5qchKyly0hJBL8fjsZeP4mRN59wESWZMr1EgPkqD+g6TKNdfWZyK
      b92+AopJkgAlABK0BmxOnLjQgcPnW3Gprd/vQ2x/ykzUY9X8NKxekI6UWN2400S9A3b84Om9
      6LM45jhCMlUswyAmQoVekX9GGxZl4hu3LYOEHX86iBIACSo8L6Ch04SPzzTi+IUOWB1usUPy
      KYVMgoU5Cdi2LBcluQljjgrO1Hbhly8cCeqEF8rkUhZub2D8bL64rQS3rps37t9TAhCZl+Nh
      G3LD6rh6cY9hGOhUcujUioA4OEJsHM+joq4b7x2rQ3Vzb8jf/BgAafERuGVNIdYsSIPqilpv
      QRDw0p4qvLq/RrwAyZjUShmGXJ5xK8jmmkzK4ucPbMS8jLgx/54SwBwacnlR39GPhk4TmrrM
      6OgdRO+AAxzHw3PNDY0BIJWykEkkSIzRIiVWh9yUaOSmRCMnJSrgtpT7iyAIOHOpCy/trUZL
      txkBPrXvFwlRGuxYU4jNpVkjC3scx+OXLx7B6UtdIkdHPhGrV0EQgP7BIbFDuUp2chR+/dCW
      MfcJUALwM5vDhZMXO3HiQgeqmnsw5Bp7c9FUMQygUymwMCceq+anoawwGQpZaG7oPtdgwIsf
      V6Guoz9gnqjEFB+pxm0birC5NBtSCQvbkBs/fHoP7RIOABqlDOtKMrDrZIPYoYzpoVtKccOK
      vFH/nRKAH/C8gNr2PnxwogFHq9r8WpGiUkixcXEmrl+Wi/QEPdgAOWhipgRBQGfvIJ7/6DxO
      XaRql7FkJkbi/hsWYWF2AvoHHfjhn/aid4AWhcUik7L41u0r8MLHVejqs4odzpgSojX4369t
      g1p5ddsISgA+xHE8LrT04tX9F1DV1DOn12YZBiuKU/DZ9UXISY4KmBOHpsPudOPNQ5fw9pFa
      uL2c2OEENIYBVs9Px/03LMKAzYlHnztIm8REwLIMHt5RBrlUgt/+84TY4Uzo659dhi2lV7cY
      pwTgA4IgoMUwgBd2n0d5Xbeo0xUSlsH6RRn43OYFiItUB0UiEAQBZ+sN+Mv7Z9HRS9MZ0xGh
      VuCe6xYgNT4Cv3zhCGxDoVUVFchYhsF920tw86oC/PSv+3F+jh/6pqs4Kw7/78ubrpoloAQw
      S063F28fqcXrB2vg8gTOU2uEWoF7ty7E5tKsgDqB6Fp2pxsvfVyFXScbAn7zViArzU9CSW4i
      XtlbDYdrap0lycyxDIMvbivBzrWF6B2w4+H/eX9UIUegkcskeOIb25AUoxv5b6G5ejhHOvsG
      8bt/nkRte7/YoYwy6HDhD2+dRnldFx7ZuTQgDxmvbe/Dk6+fQjstYs5aeV03GjpNWFeSjmMX
      OjBI00F+w7IM7ttWgltWFwAAalp6A/7mDwBuD4eall5KAL5w+lInfvfayYDfiHSyphOtBgu+
      e9fKgDmMmuN57DrRgL/vPgenO3BGTcHOYndh95kmZCTowXE87FPsMU+mTiZl8ZWbS7GlLHtk
      erWmpVfkqKauprUPm69YBwjcuYEAxQsC3jtWh1+/dDTgb/6fMJhs+I+/HsCpix1ihwKH04Mn
      XjuJZ96voJu/H/C8gObuAQjC8M2K+I5GKcP3716N68qyR+bReUFAq9EicmRT19I9AP6KqVb6
      DZkGXhDwj73VeOb9CngCZKv3VDmcHjz28jHsLZ/bzoRXMppt+Mlf9uNAZSvV9fuZw+WBx8tD
      QrvIfSIuUo1HH9iIsoLkqworOI6H0Wz3yTUYBrM63WsqLHYnXJ5P9yJRApginh+++b+y70LQ
      3rw8Xh5PvXka+882Yy7X/gVBQF17P3749F40dIrTHTFccbwAnVoudhhBrSQnAY8/shW5KdGj
      qup4QYDFNrN24794cBOA4b08//75tdAo5bh9YxH8mbIdTs9VJda0BjAFgiDgo9MNIdF7heMF
      /N9bZxChVmBJfpLfy0QFQUB5bTf+59XjUz73lPiWbciN9PgImK1OWKlMdMokLIPPrp+HOzYW
      j9t6RRAw4+o1uVQChhmuKJJJJfByPMxWJyQSFp/bPB8xejUOnG1GV78Nt60vglIuwZuHLyEh
      SguGAQrTY/HsrsppXdPt5cBxn8ZLCWAKztYb8NcPKsEH66P/NVweDr/95wn84sHNyEjQ+/Va
      +yqa8fQ75QFVIhtuBAFo7x3EquI09A06UNsWeFVrgSY+Uo2Hdy7Fkvwkv10jLlKNH96zBhKW
      hVIhhVTCojgzDuW1XShIj8Gf3imH3emBy+PF3vImFGbEYuvSHJitTizIjsdz07z5AwBzzfiC
      poAm0TNgx+9eOwl3iN3ArA43Hn/5qF9rxveWN+GpN0/TzT8ACAJwtLodyTE63LNlwaiWAGSY
      hGWwuTQLjz+ydUo3fwaYcfuVPssQHn/lOJ584ySc7k/n5bv6rfjwZANu21CMDYsysTgvCVsu
      Lzx/sqfnjUMX0dhlnvY1ZVIWEsmn8VICmADH83jitZMYmOEcX6Br6xnEsx+c9ct77znThD+8
      dYY2dwWY/Wdb0Gtx4Odf2oiF2fFihxNQUmJ1+P7dq/G1zyyDfor7ZliWQZRuZntseEGA28vB
      7eGuWpNLitGhKDMOFrsTWrUcWpUcCpkUKXGf1u/PtB26Wim76hhS2gk8gXeP1eGZ9yrEDsOv
      WIbBj7+wFmUFyT57z73lzfi/t08HXaVUOLl13TzcvWU+Dp9vwwu7zwdcC+O5pJJLcdOqfOxc
      WwitanoL5rwg4IdP78Wltr5pXzdSq8SAzQkGQIRGgUGHCzq1AlaHC3GRGqgVspHWKKlxOpgG
      neAFATwvwMNxM/p85afF4LGvbhlZ+6M1gHH0mO148ePzYofhd7wg4C/vn0VRRpxPpgVOX+rE
      n94tp5t/gHvz0EUo5VLcuakYSwuT8e6xOrx3rC6sNo8xzPCxiXdsLEZSjHZGBREswyAzUT+j
      BPDJzIIAjDTy+2QHd881paUtBt/sNchI0I98n7VtfTQFNJ4X91TNund/sOjqs+L9E3Wzfp/6
      jn787rWr5zNJYBIAvLy3CnvLm6BTK/C5zfPxxDe3Y+eaAqgmOUg82DEMsHxeCv7nka345m3L
      kTzBGcxTUZAe68Po/Ksoc/hksI7eQfz6paM0AhhLY6cJR863iR3GnHr7cC02L8lGdIRqRq/v
      Mdvx6xeDZ3c0GV4Y/sNbZxClU2FJfhJi9Wrcf8Ni3LpuHt4+Wos9Z5pCqsW0QibBiuJU7FhT
      gJzkaJ+97/DZzWzAj3qVcgmKs+LQZ3Hg0ecOon9wiEYA1xIEAa8drAn5M2evZR1y473jMxsF
      DLk8eOzlo+i10KEkwcbL8fjdayfQeUUbbr1WiS9cX4Knv3sTvnpLKbKTIoN2RzGD4XLLOzYW
      4alv3YBv37HSpzd/AIjSqlCcOfaZu4EkLzUGKrkMv3zhyMjuZVoEvkZ7jwXffmp3yJV9TkW0
      ToUnvrkNOrViyq/heQG/f+MU9lY0+zEy4m/ZSVF49IENY/7seUFAfXs/DlS24mRNR1AsGGtV
      cuSmRGHl/DSkxUXAYnfB6nDD5fHC6nCNfL71GiWkUhZ6jRI6tRwJ0RroVAqolbJptVE/WNmC
      37wa2AfCPLKzDOcajDha3T7y3ygBXONvH57D64cuih2GaL5+6zJsKcue/AsvazNa8I3f7QL9
      EgW/TUuy8LVbl0LCjn/jG3J5cLG1DydqOlDVaITRbA+oUl8GQIxeBY1SDrvTjQGba9qjea1K
      jmidChmJeuSnxWBeRixSYiMmLJIYcnnwr09+BIPJNsvvwD9i9WqsLE7Fu8euHuVTAriCw+nB
      N57YFdbnq87PisPPH9gEdgpDfpfHix//eR/qO6i/TyhgGODhHWW4flnulL7e7eXQ2TuIC829
      qGoyorHLjD6LY856ZenUcjBgYB1y+f2aMREqzMuIw7J5yViUlwi9ZnTt/66TDfjj22f8G8gM
      zc+Kx8XW3lHJmhLAFc7Wd+M/nz0odhiikkpYPPGNbUiJi5j0a5/bVYk3D1+ag6jIXNGqZPj1
      V69D6hR+/tcacnlgsbnQYhhAc7cZbUYLDCYbTFYnBu2uGbdS0ShliI5QIT5Sg9T4CESoFejo
      HcSF5h70Dw7N+QgkQi1HSW4irivLRnFW/MhUkcvjxb//eR/qAuyBSKOUQQDG7MVFCeAKT79z
      Bh+caBA7DNF95eYluHFl/oRfU9VkxH8+ezDsFsvDQVFmHB790oZxG6BNB8fxw7tdvRzMVidM
      g0MYcnlGzi62Oz1wur1gmU931CrlUmiUckRqFYiKUEEpl0IulaC734Z3j9XiSFV7QDQWZBgg
      PV6PW1YXYF1JBuQyCera+/HjZ/YF1BqiXMrCPU6FEiWAyzxeDt9+ajfaguhwB39ZNi8FP7p3
      zbi10fYhN/7t/z5GZ591jiMjc+W+bSX4zLp5YocBAOjut+KF3edxoqYzYB844iM1uG3DPGxa
      koX3jtfhuV3nxA4JAKCUSeCcIBlRGehlZqvzqlK4cFbX3j/uZi5BEPDPAzV08w9xL+2tRpfI
      P2Orw4U/v1eBf/ntBzhS1R6wN39guGnkH946g2/9/iOkxkZg05JMsUNCenzEpGcVUwK4rKHT
      FFDVDGIasDnHXQhv6DTh/RP1cxwRmWtuD4en3ykXpQU6zws4fL4V33jiQ7x3rC6oPpftPYP4
      xd8Pw+ZwY56IO4SXz0sBwzKT/tvRTuDLWgwDYocQUJq7zUi/5qwAL8fjbx+eC6j5TeI/lQ0G
      nKzpwMritDm7pmlwCM/uqsTh88F7bKgA4NSlLqgVMqgVUjjmsKUMwwCbl2QhRq/GyYudk349
      JYDLOntpSuNKYw3/j19oR1VTjwjRELH87aPzWJyXBKWf+wMJgoALLb343WsnRzVCC1b+PGtj
      LEq5BHdsLMayeSn43v/tmdJraAoIw798vQOh8UvnK9cedG13uvHynmra8BVmuvqs+PCUfyvj
      eF7Ae8fr8fPnD4XMzX8sEdPYYT9d+anRePRLG7FzbSFe2Vs95eRDIwAAHo4fKUsjwyz2qw/B
      OVjZSgu/YerNQ5ewYVEmIqd4SMp0eDkez+2qxHvH64J2ymeqGAbYUpaNmuZedPX75rMUq1fj
      1nXzsKUsCwqZFBV13Th+oWPKr6cEAMDr5f12WDYDYHNpFgozYtHYacZHpxvBT7AwI2EZ3Lt1
      IV7aUzVpd8HUOB0GbC6/JK8BqxMcz0PCsrA73XiLNnyFrQGbEx+cqMfdWxb49H3dHg6/f+MU
      Dp5r9en7BiqL3YWTNR341u0rYBvyYM+ZRlxoGb07dzISlkFxVjw2LcnEyuK0kek5j5fDP/Zd
      mNb7UQL4hJ8eP7KSo7CkIBl/+/Ac0hP0kDAMFAoJFuUmoq3Hgq4+KzISIqGUS8AwDC629qGy
      3gCOE5AUo4VSLkWUTolzDUYo5VIUpsfCOuRGm9GC2zcUo669H2dqu0ZN2czWlf8cH59u8vn7
      k+Dy4ckG3LAiz2ejALeHw3+/cgynprBQGUqsDjd+/dJRfOfOlfjZAxthtg7hfKMRl1r70NRt
      htFkH9WCW69RICFai8zESBRnxWFhTgIitcpRZxGfqOmc9sE0lAD8bMDmRHKMDiuLU3HgbAs4
      XsD37liJygYDblqVjz+/W4Hv370ae8qbsLI4Fb9+6Sg+s64QNa29uHFl/vCh0yyDgrRY1Hea
      EKdXY8eaAnx0uhE6tRzx0RrotUq/3aCdbi/eOzb7w2JIcLPYXdhX3oxb189+c5iX4/GbV4+H
      3c3/Ey4Ph9+8egI/vW89ijLjsHFxFjYuzrrqaxxODxgGUCmmdkqf28PhjRk0saRFYD8zDQ7h
      P/66Hy4Phx/euxbJsVq4vRzeP16PPWeaUJQZC4PJhtcPXkSLwTKqBe3HZ5rw8p4qZCZFgucF
      5CRHgeMFKGRSNHaZceJCB+ra+/0W/7HqdurzTwAAH5ysh32W0408L+CZ9yqmNU8dipxuL37+
      /KFxy8/VStmUb/4AcPJiB5q6zNOOgxIAhufUFH4qc8tMjMT8rHjUtvXB6fbA4+WhVcqRFh+B
      4qx4dPVP3D42Vq/Gyvlp6Oy14vplOdh9uhGtl9tVuNxe5KZET/sg66lQq2RgwJwSDfMAACAA
      SURBVOCdI7U+f28SnHoHHFOqLR+PIAh468glv1cVBQuHy4NfvnAYfbN8wPJ4ObxxaGZrdJQA
      MNwB0x83UQDoH3QgKUaLjYsz8cahizCa7Xjh4/PYvjwX9R39qGo04tDlRbAzl7pgc7hx6Fzb
      yELxiuJU6DUKvH6wBh+cqMfakgx091vRYhjAvooWxEdpUJAW4/O49Rol6tr70Uwb5MgVdp9u
      nHFLhvK6bry0pyrkq32mw2Cy43//eQKuWZyjXdXUM6Onf4CawY346V/3o7LBKHYYV7lr83wc
      Od+GDhF6FN20Mg9WhztsKjTI1LAMg8ce3oK81Ok9dBhMNvzw6b0wWQP/NDEx7FhTgPu3L5r2
      4fS8IOC//n4Ypy91zei6NAK4LClGJ3YIo7x2oAadfeI0qNOq5Dh9KTwX6cj4eEHAvmke/+nx
      cvi/t87QzX8CHxyvR3ld97Rf19k7iPLa6b/uE5QALstIjBQ7hFG8HC/acLmr3zqnPUxI8DhR
      04mhafxufHiqAZUNBj9GFPw8HI8/v1uBwWtKQCez/2zLrBr2UQK4LDclSuwQAoZMyqJxhnOK
      JPSZBodQ2TC1p84esx0v7q7yc0ShwWCy4eW9VZjqrLzHy2FvedOsrkkJ4LLEaC30Gv/16ggm
      KrkURhNt/CLjO1bdMemNShAEPLvrLIZmscAZbnafbkLtFMu6KxsMGLBNb8RwLUoAl+nUCuSk
      RIsdRkBwebiAPnyDiK+y3gC3d+K24DWtfThWHd71/tPl5Xi8sPv8lD5/+8+2zPp6lACusCQv
      UewQAsJkPYgIGXS4UD1Ba3CeF/D3jwLjWMRgU93Ug/Laiat6HE4PztbNfl2FEsAVlhWl+L3v
      eaBTyCRg2emVopHwdK5x/LLpygbDtPvSkGECgFf314Djx38Qq2ww+OS8AUoAV4iL9M+mqmAS
      E6Gm6R8yJeM9gX5ybjTtMJq5hk4TqhrHH2GdmWSEMFWUAK7AMgyuX5YjdhiikUpYxEWqxQ6D
      BIm2HgtMg6Nr++s6TKilp/9Ze+fo2G1YPF4O53xUVksJ4BqlBclIiQ28TWFzYX5WPJxUsUGm
      obZ99I3+49ONQXWQe6CqqO9G9xgHx7QYLDBZnWO8YvooAVxDKZdi+4o8scOYcyzDYEtZFron
      aU5HyJUuNPde9edBuwsnaqjyxxcEAWPuuq5qMk54qNR0UAIYw+bSLCTFaMUOY04tyI5HtE6F
      Qcfs6opJeLm2FfnZ+m5YHXS8qq8cPtc2ar/FRNVX00UJYAxqhQz3bFmAcKmFkUlY3HPdArT1
      WMQOhQSZth4LPFfsBzhW3S5iNKHHYLahruPTJOtye9HU7btd+pQAxrF6QToW5CSIHcac2FKW
      jYL0WDR3U+tnMj0uDzcybWh1uHCxlRZ/fUkQhtvEf8Jgsk27X9BEKAGMg2UZPLJzacjvC0iI
      0uCe6xZAEAS0GmgEQKaH5wW0Xx451neYRp1nS2av4opy28Yus08X2CkBTCApRosv37g4ZKeC
      JCyDb9y2HDq1Ai4PN2ZJHyGT+WQEcKGld5KvJDPR2TsIi2246qfFx6N0SgCT2FSahQ2LM8UO
      wy/u3FSM+VnxAIa3lg/YfFNaRsJLV78VvCDgIiUAvxhye0e687YaKQHMKQnL4qFbSkNuh/D6
      RRn47PqikT+brUOTNvciZCxGkw1DLs+YNevEN+o7TPB4ORhMvi3TpgQwBSqFDN+/ezXSE/Ri
      h+ITJTkJeHhHGaSST3/8dFoTmSmz1YkBq9Nnm5PIaK3GAdiG3D4vsaUEMEUxejV+8oV1SIwO
      7v0BC7Lj8YN71kClkF31382D9OElM2Oxu9BioAoyf+roGYTZ6oTdOfsGcFeiBDAN8VEa/NeD
      m5AVgMdHTsXivET86N61UCtlo/6ONoCRmeJ43qe16WS0AbsTHb2+Px+cEsA0xejV+M8vbQiq
      swMYAFtKs/D9u1ePefMHhmu4CZkJL8f7vDqFXM3l5vxSpk0JYAYitUr84J412LGmAJIA752v
      kElw/w2L8cjOpaOmfa7k66ElCR88L6B3wCF2GCHN7eHQ1UcjgIChkEvxpRsW43ufW42YCJXY
      4YwpLT4Cjz6wcThRSSb+UVMX0PFF6yb++erUcsik4ftR4ngBnX1TrwBSyqWjRqIKmWRWMcz0
      9QqZBJpxRsWTifbx5z5SqwTLjP1AyQsCuvzQqDF8f2t9ZEVxKh7/l63YUpodMKMBpVyKOzYW
      4bGvXofC9FixwwlY929fhB9/fu2EXyOTsvjqzrIJv+aW1QXIDNJ1IV+Z6BChh3eU4Uf3rsGP
      7l2DtQvTsSg3EWsXpo/8vVwqwRe3lYx785vMWK/fuDgTjz9y3chn8uEdZXjoltJRry3KjMPm
      0uwZXfcbn102o9eN577ti6BTy8f9+z6L70dZod3nYI5E61T4l88sxdZl2Xh5TzUq6w0Qoxu6
      hGWwan4a7to8HymxOjAz/ECFAwnLICspEgM2JxKjtfB4OawryUBcpBot3QNIiYtAV78V+yqa
      Ea1T4v7ti9Ddb8PuM424fmkOMhL0qKjvxqmLXZCyLBiGQWl+EsoKk9HVZ8X7J+p91rI32EVo
      FPjzexVQXh41f3ymCYXpschMjMSZ2i5U1hvQ3D2ArORISFkWfRYHlhelYteJemwpy8aRqjbs
      WF2ACI0Ceyua4fHyWJAdj9S4CJTXduHs5dfzV3TN1KrkcHs4FGXGoanLjBi9Cm4vB4VMgptW
      5SNWr8aByhawDIPc1Gh85eZSnG80oLyuG7esLkCUToXXD9YgKVqHrORIpMXrceBsCy619WH1
      /DTMy4xDQtRwReDK4lRY7C4kx+rAAMhJjsL5RiOOXejAiqJUzM+Oh8Fkw0enGrA4LwmL8xLR
      3mPBrpMN2LwkG519g4jUKqGQSbB9RR50Kjle3X9hVFsN25Dvu6zSCMBHWJZBQVos/uOL6/Ff
      X9mM0vykObu2VMJiXUkGfvO16/GdO1ciNS6Cbv6TyE+LQUOnGRV1BpQWJCFKp0JeagyOVXdg
      U2kW9lY0j5wOxwvAh6casCgvAdlJkWjqNuPjM034/NaSq97TZB3CrhMNKCtIRmpchBjfVkCS
      SVl89ZYyfOfOlfjwVAMgDM9pf3y6ETvXFELCslg1Pw2CAGxckoWS3ERcV5YNjUqO1QvSwXEC
      ztYbUNlgxF2b5iM1NgLp8XrsPt2InWvnjbxeJmGRGK2FVjX8FH3yYieWzUvBvIw41LT04pOn
      svONRpy40IF7r1sIYHj0crCyBduW52LtwgxAAE7WdOD2DcXIS4uGTqXAqYuduH5ZDjITI7F+
      cSbePVoLu3P4hry8KBW3rZ+HdqMFrUYLdp9pwh2bipGRoMf2Fbl492gtSvOTIJdK0GdxYNfJ
      BqxZkI74KA02LcnCtuW56OwdBMsyaOw0wenxYuEcNaKkEYCPsSyDosw4/Md969Hdb8We8mYc
      PteK3gHHVU8osyVhGaTERWDTkixsWpwJvVbps/cOB8vnpWBBdgIK0mPAcTzq2vphNNvQ3mNB
      /+AQ2owWOF3D6yL2ITe6+21o7h5AYrQW60oy0WYcgPSKeX+WYbBteS48Hh5SKRvyTQSnw+Pl
      8ewHldCq5bh360Lsr2hGq9GCpu6Bq6ZNO3oHEatXQRCisae8CTesyMPFll4kRGtwx6ZitBoG
      IJMOz/W3Gi1o7h7AlbOuUTolbl6Vj4r6bgBAd58VxZlxWJgTj4OVrchNiUaMXo3PbZ6Pug7T
      yLpBu9GC9t5BeLw8EqM1yE4e/rpPKuMau0xoM1rAsgwSozWoae6B0WyHyz28c57jefzlg7Mw
      DQ7hm7etQGfvIKQSFgnRWtS198NotsPt4SBhWdy0Mg+2IQ8kLAulTAovx+EPb56Gy8PB4+VR
      19GPKJ0K7BxNJ9NvqR8lxejw+a0Lcc+WBWjsMuFcgxHVzT1o7DLD4fRM6/B1mZSFTiVHbmoM
      FuYkYFFuAj3pzxDLMMhLjcEP/rQHXo7Hv39+HaKuXNC7Jk/rtUrcsCIPJTkJONdohEohRf/g
      EGRXLKxLJSySY3Q4WtWG/LToOfpOAodMysLjHfv3WcKyuK4sGyqFFE6XZ9wHIbeHw4DNiSid
      Eu8crcUvv7IFv/j7ISRGa+FwejDk8k54Y+wZcODP71UAAJJXDR/r2mKwICspEubLO93j9Gq4
      PByGXJ4xPzsXWnqRlRSFpm4zGGDUYnV7zyB2rCmE28sj9vL52YIwPIpQK2XQqeToszggk0hQ
      39GP29bPQ4RGgaRYHaRSFglRWtS2t2J+VtxVrxULI1x73AzxC0EQRn7xTINDaOg04VJrH7pN
      NlhsTjhcXgzYnFDIJIjUKpGVFIVYvRqJ0RqkxEUgKUaL+EjNpNU8M/XE6yext3z08XOhSMIy
      SImNGDkAJzFaC7eHg1TKot/iQFKMFh29VmQm6tFqtCAjIRJROiXajMOjg3kZsRAEAU43hxbD
      AOKjNLA6XIjWqRAXqUGfxYF+iwNDYVJZNfzvqUNbz9hliunxemjVcrg8XrQZLVDKpZBKWJit
      zpF/47R4PdqMFsTq1ZBJWHSbbChMj0Vdex8YhsHCnASYrU54OR4Wu3Pc138iWjc8588yzEjC
      TozWoKvfhoXZ8TBfblvRP+iAQiaF2epESpwO7T2DyEjQI0avRlOXGSzLwO3h4HR7kRClQWef
      FZmJkdBrFLAOudHUZUZSjBZ9Fgc8Xh4FaTFgWQYOlweGfhvS4vVQyCW4a9N8PPrcQSTFaBEV
      oYJpcAg9ZjsSorUjcafE6mAw2aBTKyAIwlVrAAwDMGB8OosAUALwGy/Ho8dsR2OnCXUdJjR2
      mtBnccBid8LpnrzpGsswiNAooNcokJGoR1ZSFIoy4pASp4NOrfB5vM9+cBZvHan1+fuS0CeT
      sFiQk4CKum6xQwkow9V4xVArpDhW3Y7zszjKUSGTICZC5fNSUJoC8iG3h8Oltj6cudSFygYD
      OvusMx7e8YKAAZsTAzYnWo0WHDrXBgDQaxQoSI9BWUEyluQnIS5S45PYP1k4I2S6pBIWWUmR
      lACu4XR78bePzvnkvZRyKaIpAQQeQRDQ3W/DvopmHD7fhh6z3efDtCtZ7C6cutiFUxe7oJRL
      sTA7HptLs7E4PxEK2cx/nP4YVZDwIJGwyEqKEjuMkBahUUA9wU7+maIEMAuX2vrw5qGLKK/r
      HncBzJ+cbi9OXerC6UtdiI/S4IYVedi6NGfcfj8T8fWuRhI+dGo5MhP1YDBq/Zz4SEpcBPQa
      3z+kUQKYgcZOE/720XmcbzT69Wl/qgQARrMdz+6qxNtHarFzbQG2r8iDXDr17fExekoAZGai
      dSpE6VTQa5V0qpyfZCTo4fBDvy5KAFMkCALMVide2H0e+8+2BMSNfywm6xD++kEl3j9ej/tv
      WITlRalT2mIfpVVNWMpHyHjiozTQKGVIitFSAvCTvNSYq6qcfIV2Ak+Bl+Oxt7wZ33xiF/ZW
      NAfszf9KRrMdv3rxKB576Sh6zPZJv16lkEKvoc1kZPqSL7cdmZdBfaf8QSmXIiclClE6338+
      KQFMwmQdwn+/fAy/f+MUBn18HNtcOH6hA9/748c4WtU2YW8apVyKWL16DiMjoSIpZrgnzoLs
      uWlfEG5SYnWI1qn80nWYEsAEalp68YM/7sGJmo6gXtwyW514/B/H8eyuSgy5xp5HZBgG6QnU
      v4ZMD8swSIsbPis7JyUKERN0syQzs/jy4VNxkZoZd0wdDyWAMQiCgD3lTfjZcwdhnML0STDg
      eQHvHK3Fr148MrIt/lpZiVTKR6ZHLpMgJW647YJeo0R+WozIEYUWhgHKCpMBAFqVzOf7dSgB
      XIPjePzzQA3+8ObpkDwkpbLBiJ/8ZT8MptEbSrKSw7unPZm+tPiIkQZtALBqfpqI0YSeWL0a
      BZeTqkYlh17r21JQSgBX4Dgez314Di99XAUuhHu5t/cM4mfPHkCL4epzXJNjdBMeSEHIta59
      4i8rSKZd5T60dmE6WHb4Ni1hWSTH6nz6/pQALuN4Hs9/eA7vHK0N6vn+qerqt+E//rIfvQOf
      TnFFaBQ+/wUjoa0oI+6qP+u1Siy9PGVBZu/a08pykn07TUsJAMN9d14/eBFvHw2vZmgWuwv/
      /sz+kaPmGIahIyTJtBSkj57z37o0Z8762Yeyksst36+UkeDbadqwTwCCIGB/RTNe+rhK7FBE
      YTDZ8OuXjo7sMlxIpXxkipJjtGM2IyxMjx2ZtyYzd+OKvFH/LTMpcuQgG18I+wRQ29aPp98p
      D4tpn/HUtffjqTdPgeN45KVF0xwumZLSgrGneliWwY41BaAxwMzlpkSPVP9cKU6vRqQPT/8L
      6wQwYHPiN68eh8szeX/+UHe0uh0fnKyHXqNEbgqVg5LJleSOP1pcNi8F2fR7NGOfWTt8VvK1
      JBLWp9O0YZsAeEHAH98+EzJ1/rMlCMALu6tQ29aHpfNSxA6HBDiNUob5WfHj/r2EZfGFrSVz
      GFHomJcRi+VF438GF2SP/+8+XWGbAA5WtuLEhQ6xwwgoTrcXf3q3AsWZcdPqJErCT2lB8qQH
      35fkJqCsIGmOIgoNEpbBvVsXXrW34lpFmXFXnUc9G2GZAMzWITy/qzKs5/3H09BpwpnabpoG
      IhNaPi9lzEPVr8QwDB64cYlPFy1D3cYlWSjOjJvwa5JidUiK8U25dlgmgBc/roKZ2taO6/WD
      NcijKg4yDr1GgSX5U3uyT4rR4vaNxX6OKDRE65S4Z8uCSRMryzAoK/TNyCrsEkBDpwkHKlvE
      DiOgDbm8aDUM0JMbGdOKotQpnzrHMAx2rimY9Kk23ElYBl/dUTblk/lKC5Lhi75wYZUAeEHA
      P/ZdoENPpqCqqYfOByCjMAA2Ls6c1mtkUgke2bnUL0cahorrl+VMq/iiMD3WJ+2hwyoBNHSY
      UFHXLXYYQYHjBbg8odcMj8xObmr0jKYHU+Mj8NAtpZBIaHfAtfLTYvCF60um1epZKmF90ngv
      bBKAIAh48/BFeDl6+p+qQbvLJ8NMEjquX5oD6QwrUFbNT8Nt64tog9gVYvUqfPuOFVAppjal
      dqX1JZmzvn7YJACj2Y6KOoPYYQQVAYB0jM0oJDzF6tVYOYunToZhcMfGYmyY5hRSqFLIJPj+
      3WtmXNGTnRKFzMTZ9QYKm0/3gbMtIdnf398YBlBNUu9NwsPWpdmzbhMilbB4eEcZVhan+iiq
      4KSQSfBvn1s1qwN0WIbBdWXZk3/hRO8xq1cHCbeXw+HzbWKHEZTcXn5UR0ISfrQq2ajWxDOl
      kEvxjc8ux/ys8KwMUsgk+M6dK1E2Ti+l6Vi/KAMqxcwf0MIiATR3mdHROyh2GEFLJmURraOK
      oHC2uTQbsXq1z95PrZThp/dvwIoJWh6Eok+e/JdNYSPdVGhVcqxflDnj14dFAjh5sVPsEIJa
      i8GCTT56+iPBR69R4Lb1RT5/X7lUgu/etQpbwuR3K0qrxE++uA5LC31z8weG11VuXJEHyQzP
      Xwj5BMDxPM5S6eesOFwepMTqkBA1uvc7CX03rcpHhJ9q+GVSCf7lM0tx79YFPutvE4gyEyPx
      iwc3YYEfzttIjYtA6RR3Zl8rdP/FLxu0u9BisIgdRtBr7jbjrs3zqYQvzCREaXDzqny/XoNl
      Gdy2vgg/vHfNlHfCBguGGZ6n/68HNyHFT2tpLMvgsxuKZjQKCPkEcKm1D7xAbd9mq6alF2sW
      pKMwg46MDCf3bl04oxr16WIYBqUFyfjVQ5uxPETaketUcjyycym+edtyaPx8yFJ+asyMRgEh
      nwAaOk1ihxASDCY7htwefHFbSUgP1cmnFuYkYPWC2e82nY6EKC2+d/dqPLKzLKhbR5QVJOGx
      h6/D1qU5Yx7s4mufjAJk0uldK+Q/yc2GAbFDCAl2pxu9ZgcK02OxdWmO2OEQP5NLJXjwpiVz
      cvO6llTC4vplufjt167HltKsoHrgSIrR4rt3rcQP712L5FjftGyeqoK0GKwsmt7+iuD5l52h
      diOVf/qCIAAdfYNgGAZ3bZ6PxGhaEA5lt66fh7R4cfd/xOjV+Nqty/DLhzZjeVHKtHrlzLUo
      rRL3bV+E337teqxdmDHjdhmzwTAM7tw8f1r7AkI6AXi8HHoG6MhHX+m5fHxmhEaBr+4ooz5B
      ISo/LQafXTfPZ6WKs8EwDPJSY/CDe9bgsYe3YGVxKtgZljz6Q3yUBg/cuBhPfesGfGZt4Zys
      l0wkJVaHm1ZOfdE+pPf4m6106IsvGU22kf+/OC8J25blYtfJBhEjIr6mlEvxyM4yyEU4C0IQ
      hFEFGwzDgL38v08SQb/FgY9ON2L/2Rb0Dtgx1zUeMimLRbmJuK4sG2WFyaJMk42HYRjcun4e
      Dp1vhdE0+cNvSCeAATr1y6cGHa6r/nzf9kW42NpLZbYhggHw+a0LkZXk2+NAvRwPt4eDw+WB
      0WSDyToE06ATFpsTFrsTTjcHu9MNQRj+HRP4T+/oCrkUKoUULMMgUquETMoiUqdEtE6FL9+4
      GL0WBxo6TKhu7oFpcAgc759soFHKUJAeixVFKVhamBLQ5apqhQxfvnEJfvnCkUkrIEM6AVjs
      rsm/aI4wDFCSk4iMRD3qO0yoaenFzavy8f7x+qApU3W5uav+rJRL8a3bV+KbT34oUkTEl9Ys
      TMe25bmzeg+X2wuTdQjN3QNoM1rQarSgq8+K/kEHrA63jyK9mlTCIkKjgEYlh8PpuarlO8sw
      0/58qeRS6DQKpMTqUJQZh/y0GOSmRM+6Ed5cWjYvBWsWpuHQuYl7oIV0AvBy3ORfNEcK02Ox
      bXkO9pQ3IzclGrVtfei1OCBAgF6rgMfDA8xw9pawDHotDgBAXKQaEIbn38VOExb76BFVeoIe
      axemU7O9IJceH4EHb1oy7cVLu9ONjp5B1LT0oqa1D21GC3rM9jl9qPFyPEyDQ2P+nVTCIjZS
      jfhINZJidFAqpJCwLKwOF1RyKaRSCaQsA71WiUitEvGRGui1CkTpVKIs5PrS/dsXo7qpB6YJ
      psJDOgEEEo4TEKFRguN47DpZD44XsH1ZLspru/CDu9fA4fKgzWhBalwEDCYb9pY3Q6mQYvX8
      NKTE6rD/bIvoN1kvN/pDzbIMHrqlFF19VjR2mUWIisxWhFqBb9+5Enrt5A3/BEFAj9mOqqYe
      lNd141JrH0zWsW++gcDt5dDVZ0VXnxUXWnqREqtDSW4iVhWnIS8tGhpl8DzVT1d0hApf3VGG
      X714dNyETAlgjtR19OP5XZXYXJqNbcty8d+vHBvZtKFVyfHbf55ArF6NnOQo9A04YDTboFHK
      4fFysA65kZUUJXoCGI9OrcB37lyJf39m34RPGyTwSFgGj+wsm3DeXxAEGM12nL7UhWPV7Wjs
      NMHlCZzR9VR5vDxaDBa0GCx4+0gtorRKLM5Pwqr5qZifFS96BY8/LJuXguuX5YxbrEEJYI6k
      xkXA7vTghY/P40f3rIFc+mmVRZ/FgR6zHRzH439fO4lty3KxviQDqfF6nL7UCY1SjrzUaBGj
      HzbRzsyUuAj82+dW49HnD2LIRQfvBIsHblyMFeMczmIfcuNETQf2VjSjvt0Etzf4bvoTMduc
      2FfRjH0VzYjUKrG8KAUbF2eiIC02oEpNZ4NhGHxxWwnqOvrR2Dl6hB7SCSByCkPaucIwwK3r
      5kGjlOH9E/VwuDy40NwLnhdQ09oLYHi+/6bLjbf2VTShq8+Km1cXoLN3EC0BsKN5sjnReRmx
      +Pqty/CbV0/Q2ctB4NZ1hbhhRd6oev8WwwB2najH4fNtsDs9IkU3twZsTnx0qhG7TzciLV6P
      bctysHFxFtTK4B8VqBQyfOv2FfjRn/aNquRjBCFISlBmoM1owdd/t0vsMELGpsWZ+ObtKyb9
      uv0VzXjyjVN+K8kjs7d9eS6+cnPpyJOux8uhot6Atw5fQk1Lr8jRBQaFXIItpdm4eVU+EqO1
      AbExbjZO1nTgsZePXfVwFtIjgECu1Q1GEVMcUW1ckoVBhwvPfXgOPCWBgLNxcSYevGkJWJaB
      0+3FoXOtePdYHdqMtJ/jSi43h/eP1+PDkw1YvSANN68qQG5KdNBODy0vSsXdWxbg7x+dG6ko
      DOkEoFXJoVXJYRvyT/1xuEmcxoEwO9YUAgCe23UuaPY5hDoGwKYlWXjollJ4eR6Hz7fh5b3V
      MFyxw5uMxvECDp1rw5GqdqwsTsUdG4qRkagPyhHBzjUFMJps+Oh0I4AQTwAAkBStRT21hPaJ
      pGl2N9yxphBqhQxPv1MOD60JiIoBsH1FHu7bVoKz9Qa8vLc6INaVggnPCzha1Y5TFzuxZkE6
      7txUjKSYue34OVsSCYsv37QEZusQTl3qCu01AAB46s3T2H0525GZU8qlePKb2xE/zWMhBUHA
      oXOt+OPb5XC4wmNBMdAwDHDb+iIsyU/CK3urcb7JOOf9c0KRWiHFjSvzsXNtYVDtEgYAh9OD
      X714JPQTwAcn6vH0O+VihxH0EqI0+MO3b5zR7khBEFDV1IP/+cdx6s80xyQsg9s3FMFid2Fv
      eRPcXhqJ+VpitBZfuH4hVhanBdX6wKDdFdrtoAGgKDNO7BBCQl5qzIy3xjMMg4U5Cfj5AxuQ
      kaD3cWRkPFqVHOtKMvDxmSbsOtlAN38/MZhsePyV4/jli0eCaj0lQqMI/QSQEqtDlC5w9gME
      q+Ks2SfS9IRI/L8vb8KywmQfREQmEqFRIDpChQNnW9A/Tp8c4ju8IODUxU589w+78fHpxqCp
      fgv5BCCVsFiYkyB2GEFN5sN/wwiNAj+8dy0+v3UhpJLgGS4HE7VCiqHLvaWC4zYUOqwON37/
      5mn84u+Hxm1QF0hCPgEwDIOlBfTEORspcTqkxvnueECWZXDbhiL87P6NdLSkj7EsA4fLCw9N
      94jqTG03vv3URzhzqQuBvMwa8gkAAEpyE6FRBf+WbrGsmp/ml/ednx2P9S6EdQAAIABJREFU
      /354KzYuzgyqxbNAFKlVQCGTBM3UQzgwW534xQuH8dKeKrgDtHleWCQAnVqOMhoFzIhUwmLt
      wgy/vX+ERoFv3LYc3/vcqmmXmBJArZQhNyUaTrc3KDt0hjqeF/Dq/hr84u+HAnItJiwSAMMw
      2Lwkiw4xn4HizDgkT3MD2HSxDIOVxWl4/OHrcNOq/JE22WR8DIDS/CQsn5eCFsMAnG66+Qey
      ygYjfvLMPjR0BNam1LD5pM3LjENmQqTYYQSdG1bkzdm19FolvnzjYvzqK1uwOC9xzq4bbNLi
      I/Cvt6+ARiXH/rMt1Hk1SHT2WfHTZw/gWHV7wKwLhPxGsCvtOdOEJ984JXYYQSMlTocnv7kd
      EnbunxM4jseZ2i787aNz6Oi1zvn1A1FMhAo71xZi+bwU/OGtM6hsMIgdEpkBqYTFAzcuxvbl
      uaL3EwqrBDDk8uBfn/wQBpNd7FCCwiM7l+L6ZTkzfj3H8+g1O9AzYIfF5oTF7sKAzQmOv/qJ
      lWEYRGqV0ChliNapEBelQaxeDaVcCo+Xw+HzbXjtQA06+8IzEWhVMty0qgC3rMqH3enBr186
      igbqbxXUGAB3bCrG3VsWiBtHOCUAANhT3oQnX6dRwGTS4iPwm3+5HnKZZNKvFQQBbg+HFsMA
      Lrb2oaHThDajBZ191llNTyRGa5AWr0dOchRyU6PRbxnCR6cb0dxtDoteNvGRGty8Oh9byrKh
      VshgNNvws2cPhm0iDEU7Vhfgvu2LRKuCC7sE4PZw+MHTe+gA8wkwAL5/92qsnKD8UxAE2Ibc
      qGwwYH9FCy619fn99CiphEVuShQkLIs+iwN9FkfIHTojlbAoTI/F1qXZWDk/beTo0BbDAH79
      0lF00c0/5Ny4Ig/33bDoqmNi50rYJQAAONdgwKPPH6LFs3GUFiThx/euhWSM3j9DLg/ONxpx
      sLIV5xoNsA2J1+FTIZOAFwTwvABeEIJ2VMAwQFykBqvmp2HDogxkJEaCvWJu2GCy4SfP7EPP
      gEPEKIk/3bQyD1+6YfGYnzl/CvnzAMayMCcB60sysLeiWexQAo5GKcN92xdd9YsoCAJ6BxzY
      c6YJBypbYDQHxhrKJ3XvDAMoZVJE6pRgABjN9qAYGcRHqlFakIxl81JQlBkHpXz0x9FotuHn
      zx+km3+Ie/9EPaQSFp+/vmTGTRdnIiwTAMMwuG/7IlQ196AnQG5mgeKuzfORHv9px842owVv
      HbmE49XtcLi8IkY2PkEAhtxeDPXbkBSjxQ0r8hChUaCuvR917f2w2F2Tv8kcUMqlyEqKRElu
      IhblJiAzMRIqxfg71AftLprzDxOCALx9tBZymRSf2zx/ztYEwnIK6BOV9Qb87PmDtH3+stL8
      JPzg3jWQSyXoMdvxyr5qHD7fFrDb2CeSEqvDrevnoawgGUaTDRdb+1Df0Y9WowVGkx1ur3+/
      J5ZhEBepRmp8BPJSY1CYHousxMjhFrxT+HA7XV7853MHcLG1z69xksDCsgy+ctMSbJujEtGw
      TgAA8Mreary8t1rsMESXEKXBrx7aApVCineP1eHtI5dEnd/3ldyUaNy3vQQLsoe7mXq8HIZc
      XnT1W2Hot6GzbxAGkx1m6xDMVidsQ25YHa4pTSHpNQqoFFJE6VSI1CoRH6VBcowOSTFapMZF
      QKuWQyGb/iDb6+Xw2MvHcPJi57RfS4KfVMLi3z63CiuKUv1+rbBPABzH47FXjuHEhQ6xQxGN
      QibBz+7fAC/P449vl6Ojd1DskHxKwjLYtCQLX9xWAp1aMebXCFcsJn+ysGy2OoExGiprVQrI
      ZRJIWAYMw4BlmasWbWfruV2VePPwJZ+9Hwk+GqUM//XgZmQm+bd7QdgnAGC4suWnfz2A2vb/
      3959h8dRn3kA/87M9r6SVtKqF0uyiiVbluXejTGYZmMnmPNhQnOOkATuEvKkP7nkCFySuyRP
      woVwTwIhIZDAAabFNriAC25ylW1ZvTdLq7JF2jb3h2whq3kl7e7M7r6fvyxpd/aVtTvvzK+8
      b5fQoQQdxzJ4/J4FqG3twftHr4R1/fhonRJf2bQAxdlmwXdgjofneXx0qgbPv3USXvpYRrxY
      gwo/e3w9DJrANbSiBHBNh8WGH798EA0d4XX1OxmGATaUzsLFuk7Ut/cKHU5QcCyD2xdlYfv6
      wnFX3QipouEqfvCH/VTYjQwryozD93esgDRAewQoAYzQYbHhx3/6BA0RcDJkACTF6tDV64B9
      MPTH+qeqID0WT25dCJNBHCWoLf0OfPfFfbTih4yxZWUutq8vDMhda8RUA/VFrFGN7z2wHOkB
      HncTA61KjqbOvog8+QPAhdoOfPuFj1HRIPwqG5fbg9+/e4pO/mRcbx+qwInLLQE5NiWAUeKM
      GvzooVWYOys8yxEzGBoG6bMPhuzOWX/p7LXjRy8dxInLwq224Xkee0/W4MiFyF2EQCbn9njx
      wq5TuNrr/82AlADGoVcr8O3ty3D7ollh1URGr5ZDo5SFxC7ZYLENuPCzvx7BRydrBHn9hvZe
      /Gn3WUFem4SOq712/P7dU34vX0MJYAIKmQSP3jEfX7t3IVSK0O8nXJAeC5NBhX6HU+hQRGfQ
      5cHvdp0MehJwe7z49ZvH4BDpDmsiLscuNmOvn9+jlAAmwbIMVs9Lw88fvwW5qTFChzMtCpkE
      D9xaCKmERVUzVUCdiMvtxf+8cxIHz9QF7TV3Ha6gvwmZkr/sPefX8jWUAG6CYRgkxujwk0fW
      YOdd86FVyYQOyScMM1Ta4b+fuBW1rT04XUndo27G7fHit2+dQNmV1oC37Gvs6MVrtAOdTFG/
      3YkX3yuDx09DQbQMdIq6+uz4+/6L2FdWO1yNUmzS4g3Ytq4ApbMT8afdZ2lX6RRpVTL85OE1
      AduF6fXy+OEfD+BcdXtAjk/C39PblmDpnJQZH4cSwDQ1tPfi7U8v48iFRjicwo/hMgDSzQbc
      vWw2ls5JhlTCYf/pWvzqjWMRv9pnOhJjtPjpY2uhD8AuzANn6vDLv39GfxcybbEGFX751Q1Q
      K2c2IkEJYIbauq3YX1aLfWV16OgJfmlpmZRDYUYcbi3NxNys+OGuQtXN3fju/+6jCcYZKMlJ
      wLe3L/NrfXarw4l/++1u6ktNZmzrqjxsX184o2NQAvAT+6ALF+s6cfBMPc7XtF8rJBYYMgmH
      tHgDlsxJxsLcRJijNTfsErQ5nPjWCx+hMYLKWgTKjg1F2Lwi12/He33fBbz6EY39k5mTSTk8
      /9TtM9rNTgkgAGwOJ+rbe3Gmqg3ltZ1o7OidUVMSqYRFfJQGsxKjUJAeizkZsYgxqMCxY69M
      eZ7H7945iX8cr57Jr0CukUk5/PSxtZiVGDXjY3VYrPjX3+5Bv52W4hL/WD0vDU9uXTTt51MC
      CDAvz2PA6Yal34HG9j60W6zosNjRbx9En30oKdgcTijkUnAsA5mEg1YlQ7RehfgoDczRGiTE
      aKGSS30qCHWyogU//fMh6nfsRxkJRjz72FrIZ1g87oVdJ/HBZ1V+ioqQoV39P398PTISjNN6
      vrjKIYYhlmGgkkuhkkuRGKMb9zFeLw+GwYyLPdkGnPjjB2fo5O9nNS0W7DpyBVtX5U37GG1d
      /dhfVue/oAgB4PHy+PuBcnzr/mXTej7tAxAB9lpjkZngeR5vHrwUds1cxOLNAxfRfHV6/7c8
      z+PtQxWiWC1Gws/xSy2obu6e1nMpAYSJ5qv9+JCGFwLG4XTj1b0XptWopd1iw/7TtQGIipCh
      DYxvHLw4rc2LlADCgNfL42/7yiO2tHOwHC1vRHltx5Sew/M8dh+vpiYvJKBOVbRO6+6fEkAY
      qGm14ND5BqHDCHseL483Dl6a0jZ8q8OJPSdoRRYJrEGXBx8em/oIACWAEMfzPP7v4CUq8Rwk
      56racWkKTWQOnK6DlSqwkiD49GwDLP2OKT2HEkCIa+2y4tgl4RqaRBovz+O9I1d8mgvwenns
      OSFMnwESefrsgzh8oXFKz6EEEOI+PFZJyz6D7OTlFrT40L6xvK4DDR3h31+aiMdHJ2vgcvs+
      30QJIIQNutz4+BStLgk2l8eLvT6M6++lq38SZLWtPahs8n1JKCWAEPZZeRNsA7TyRwifnmuA
      c5Jy4P32QRynoTkigINn6nxeEkoJIITR1b9wuvocKKtsnfDnxy8108YvIojPLjb7vCScEkCI
      6u5z4GJ9p9BhRLQj5yeecDtwpj6IkRDyuR7rAMprb35ucHu8lABC1cmKFrjcNPkrpBOXW8ad
      gLf0O1DZ1CVARIQMOVredNNhoD0nqikBhKqyKxMPP5DguN4DYrSyK23UiIcI6mRFy6Qtawdd
      brz1yWVKAKFowOke98RDgm+8vr7HLjUJEAkhn+uzDeJS/cQbFo+cb0RHj40SQCiqa+2hpiIi
      MToB2AacqJjCTmFCAmWiUQKvl8d7RysB0CRwSLrS1DWtqpTE/2rbejAwYrVPdbMFvdbpd38j
      xF8mSgBXGrtQ02oBQAkgJNEEo3g4XR5UjajFfq66HZSaiRg0dfahu29sbaCPTtXAe612GCWA
      EMPzPOpae4QOg4zQeK3cA8/zKKe5GSIiF0aVL3cMum64M6AEEGL6bIPo7h8QOgwyQmP7UB32
      XtvgcDIgRAxGJ4BL9VfRNeKugBJAiOmxDlDjF5FpvNaIo7mzjybniahcHrUS6FRFyw1fUwII
      MV19juHxOyIOnRYbgKHJNULEpLXLin770KIEj8eLc9U33hFQAggxnT02oUMgo/TZBzEw6EJ1
      i0XoUAi5gcvtQX370LBkZ68dbd3WG35OCSDE9Fhp/F9sPF4e/Q7n8AeNELHgAdReuzCpabHA
      OapXACWAEGOnEgOi4/Z40WGx4WqvXehQCBnj+oXJeHeolABCTJ/I7wAeuLUIT2wuxT+tmwOt
      Sjbm5+ZoDXZsKBr+mmGAeVnx4x5Lp5Jj513zAxar3/A8OnvtsFNvBiJCjR1DixRqKQGQQMtK
      isKuQ5dhdTixeUUuOJbBkvwkrChKgUzCgWUZROmUWFGUivw0EzLMRjy4YS4W5ydBrZCiaFYc
      1pVkINagAsMwUCuk4FgGczJiwTKM0L/euNxefsxqC0LEoqWrH4MuNzrGmT+kBED8jmEYSKUc
      Bpxu3L4oC1nJ0Yg1arB1dR4AIDFGC45l8OW7S8CMOKnLZRLEGtSQsAz+5Z4FYJmhY929LAcp
      cXpRl79ot1hv/iBCBDDodKOty4o+29gSJZQAiF+p5FI8dtd8lOSY8c6hCsxKisL7Ryux+3gV
      kk06AEP1cvafrkO/fRB1bT2wWAdwtLwJLrcH2cnRMEdroVXJwLAM8tNMWJibhN3Hb96DV0ht
      3bQ6i4iTy+1Fa5cVfXZKACTArA4n/vPVw2i32LC8MAVNHX1YWpCM0txEdI4zScrzPJQyCfLT
      TMhKigbLMiirbIXn2l6Hi/WdOF3VhtsWzgr2r+IzjmVo/J+IlpfnUdfWg/FuoCkBhBiNSi50
      CJP68FgVbAMuPP/WCQDAP45VwcPz0CrleO3jC+ixDuDQ+QYAwHtHK+Hx8nhlz1nkp5tQ19aD
      hrZeGDVK7DpcAZvDiX2navHGgYvosQ5AJuWE/NUmxAM3VAQlRGxau/rH/T7D+9o+nojCW59c
      wkv/OCt0GGQUlmFEPUdBIps5WoPWrrHzVHQHEGL0GoXQIZBRGAZgWXGuUCIEGCpUOB5KACEm
      1qgWOgQyikGjGLc5PCFiMTDBBlJKACHGqFVAKqE/m5joRD4vQ4h8gvkzOpOEmCitEiqFVOgw
      yAhGLQ3LEXEbdHnG/T4lgBCjlEth0quEDoOMkBpvEDoE0TEZVLhzaTbuXJqNuROU+rguP82E
      vDTT8NdJJh1Wz0sb87jUOD1WFKX69Prb1hZAwtHp7TrDBBcp9D8UgjISjEKHQK5hGQZplADG
      SDLpkJ0UjaaOob60MgmH1Dg9zNEaAEC0TgmZhEOMXoVe2yB6r9W4MkdrkJFgRKJJB4YBEqK1
      SIs3QMKx0KrkSI83IMNsgFImAQAYNQpkJBihVQ7VnVIppEiN1yM/XbylQ4Qgl3BQyceOHEgE
      iIXMUG6qCXtO1AgdBgGgVkiRHKsTOgxRutprR2VTF5xuLwpnxSEnORqzU2Lwt/3luG1hFrw8
      j6qmLvTZB+H1AnlpJhRnm+EYdKG7fwAxehU2LJwFjVKKrj4Hzla1Iz/dBI5jEGfU4NlXD2Hj
      4iwwLIOspGj81+tH8dQXFqGqqRvROqXQv76oKOUSgMGYboJ0BxCCMhOMdHsrEpmJUeBY+luM
      Z35OAnbeVYIl+cno6rVDJZfC6fIgyaQDxzHYe7Iabx+qAMswYFmgONuMF98rG764cQy64fV6
      4XR7kRqnBwCUXWnDHz44A5VCCinHwdI/ALlEAr1KjoL0WFQ2duGVPefQ2k21mUaSSTkYtWOT
      Ir1zQ1BSrI6ucERiXvbk49uR7Gh5I37x+lEcOFOHe1fmYffxKpytbsf1kZnKxu4bHu/x8ojS
      KofLiC8vTEFrlxW7j1fhehdUjmNg1CrAsQx0ajmKs834677z6LEOYNDlRoxBDZmUGx4iIp/L
      MI8dqqQEEII4lkVhZpzQYRAARfR3GFd3nwN1rT3DXx8634D7182BTi1Hc2c/LtR0wO0d2jvR
      2m1FW7cNbx68iC2rcjF3VjxqWy04XdmG4mwzls1JQXltB3qsA9AoZXhkYzH+vPc8uvrsuNpr
      x4Mb5qKyqQuX6q+iw2LF1+4tRXWLhXZmjzLeYgUqBRGijl9qxn+88qnQYUS0WKMaL37zTlzt
      tePh53YJHQ4hE1owOwH/vL4QT/5mN7zez0/5dAcQogoz48btuEWCZ2lBMgDQxjwiejIJh7go
      zZihY3rnhiiFTIKSnAShw4hoS+cMJQAJx0JNm/OIiOk1cihkEuQkx9zwfUoAIWzd/AyhQ4hY
      GWbj8H4MjmWhkNOkIxEv7bVyJQtm33jRSAkghOWlmRAfRcXhhLBqXtrw8k8Jx1I9ICJqhmtV
      hAvSY4f2BFxDCSCEsSyDjYuzhQ4j4miUMqya+3lJAgnHQqOk+RgiXtcTQLReicKMz1euUQII
      cWuK0+nkE2Sr5qZCp77xij/WQHdiRJwYZqg209C/mRvqKVECCHEapUzU/XLDjVImwZ1LssGM
      qjMTH6URKCJCJieTcMN3AABQMjthOCFQAggDty/OoruAIFldnIb4aO2Y71OjHiJWMikH44gE
      oJBJhqutUgIIA1FaJe5YnCV0GGFPrZDi7qU54/4siQrCEZGKj9JAIrmxIcxtC7OgkkspAYSL
      O5ZkI46uQgNq4+Ksca/+ASBGr7phdQUhYpEcqx/zvSidEusXZFACCBdalRz3r5sDqoAeGPFR
      Gtw5wdU/MHR3EEUF+ogIpUxwd3rP8tmUAMLJssKUm3ZfIlPHMgx2bCiadK2/VMIh2UTDQER8
      JmogZdQqKQGEEwnH4uGN86hnsJ8tyk/Eorykmz4uKyk6CNEQ4jsJx07aspQSQJhJjtVj+y2F
      QocRNqJ1Suy8qwQse/PBtczEqCBERIjv4ozqG5aAjkYJIAzdtnAWFuUlCh1GyGMY4Kv3lk76
      ARopNU5PReGIqOSkxEz6c0oAYYhlGTy+aQESomlz0kx8cXU+5mWZfX68UatAYgzNAxDxKEg3
      TfpzSgBhSq9W4JvblkJBrfGmpTQ3EVtX50/pOQzDoCBj8g8cIcE0J2PyjnWUAMJYRoIRX9+y
      kBrIT1FmohFf3Vw6rf+3m33gCAmW+Cj1TXeo05khzC3OT8KODUU+TWISINagwtPblo4p9uar
      WYlR1KmNiIIvw5eUAMIcwzC4Y0k2tq0tEDoU0TMZVPjeAytmVNhNp5Yjm5aDEhGYn0MJgGBo
      I9O9K3KxecVsoUMRLZNehe/vWDHpmmlflebSCiwiLLVCivy02Js+jhJAhOA4FtvXF+LBDUVg
      GRoOGilap8QPv7QSqXEzP/kDwNyseMhGFd8iJJjmZZt9qk1FCSCCcCyLTSty8eW7SyCV0J8e
      ANLi9Xh259pxC2ZNV3yUZsLt94QEw4LZCWN6VoyHzgIR6NbSTHxn+3LopznRGS6Ks8145tG1
      iDX6f7/E8qIUvx+TEF9olFIU+7h/hRJAhCrONuOZx9Yi3eyfYY9QIuFYbFmZi+9sXwZ1gBrp
      LC1IhlxKw0Ak+EpyEnxeiUYJIIIlmXR45tG1uLU0M2KWiUbrlXh62xJsX18IaQDH6Y1aJeZn
      +76LmBB/WVOc7tPwD0AJIOKpFFJ8+e4SPH3fEsToVUKHEzAMAyzKS8RzO9dhYV6Szx+QmVgz
      Pz3gr0HISIkxWsy+Sf2fkahOAAHLMFhckIzZqTH4y97z+LisFl4vL3RYfhOjV2HHhiIsKUgO
      6q7o4mwzTAYVOnvsQXtNEtlWF6dDPoXyLwzP8+HzSScz5uV5XKq/ipc/PIOKxi6hw5kRmZTD
      xkVZ2Lwid9o7e2fqjQMX8cqec4K8NoksKrkUv/76BpgMvreGpQRAxuXxenHsYjNe33cBdW29
      QoczJSzLYGVRKrasykNijDYowz0T6el3YOcv3seA0y1YDCQyrClOw9fuXTil9zslADIpL8/j
      07P1eOdwBWpaLBDzu0Uhk2B5YQo2LZ+NRJG0Z+R5Hr9/twwffFYpdCgkjEklLJ7buW7KTYko
      ARCfeL08LtR2YM+JapyqaIF9UBxXtAwDmKO1WDU3FbeUZIqyMXtjRy+e+s1uuNxeoUMhYWp+
      jhk/2LFyys+jSWDiE5ZlUJgZh8LMOFj6HTh+qRmHLzSioqEr6MMbDIAonRLF2WYsL0xBfpoJ
      EhGXXkgy6bC8MAX7yuqEDoWEIY5lsGVl3rSeS3cAZEY6LDYcLW/Cmao21LVaYLEOBGSYSKuS
      ISFGi6LMeBTNikNmghFKeei0X6xv78U3nt8Dp8sjdCgkzBRnm/GDHSumNddFCYD4jW3AiQ6L
      DVXN3Who70NdWw+6+xzotw+i3+H0aWmpRimFRilHlFaBpFgdUuMMyEwwIiFGC51aLuiE7kzw
      PI9fvXEM+0/XCR0KCSMsw+CZx9YgN3V6nehoCIj4jVohQ7pZhnTz54XQXG4PBpxuDLo8cAy6
      YHU4AQCW/gHwPA+dWg4Jx0Ipk0KtlEIu5SCXSSCTcCF7sh8PwzDYsioPxy42iWb+hIS+0tyE
      KW38Go0SAAkoqYSDVMJBK3QgIpAYo8W6kkzsOlwhdCgkDHAsgwduLZrRhRKVgiAkSBiGweYV
      s2HQRHYVVuIftyzInPFyZ0oAhASRUavE/esKhQ6DhDiDRoHtt8yZ8XEoARASZGuL05CTTH2D
      yfRtv2UOtKqZ30lSAiAkyCQSDo/cUQxpEAvTkfAxJyMWq+al+eVY9A4kRADZydHYuDhL6DBI
      iFHKJXh44zy/9bKgBECIQO5bW4BkkdQsIqFhy6o8pMX7r4sfJQBCBKKUS/H4pgU0FER8kp9m
      wp2Ls/26P4beeYQIKDc1BltXT6+OC4kcWqUMj29aMKVmL76gBECIgBiGwaYVuShIn95WfhL+
      GAb40u1zkRSA4UJKAIQITCbh8OTWRaIsZU2Et35BJtbOzwjIsSkBECICJoMaT2xaAKmEPpLk
      c9lJUXjo9nkBOz692wgRifk5Cdi2tgBhVAOPzIBeLcc37lsChZ/H/UeiBECIiNyzfDbWFKcL
      HQYRmEzK4Rv3LUFclCagr0MJgBAR4VgWj95RTJPCEYxlGTyycR7mZMQG/rUC/gqEkClRyqX4
      1v3LkBxLm8Qi0RdX5+OWBZlB6YdBCYAQEdKp5fjBjpUwahVCh0KCaENpJrauygMbpIkgSgCE
      iFSsUY1/f2g1JYEIsaY4DY/cUQwuiDvDKQEQImIpcXr88MGV0ChlQodCAmhJQRK+sqnUb0Xe
      fEUJgBCRSzcb8Z3ty6BTUyexcLQwNxFfv3cRJALUhGJ4nueD/qqEkCmra+vBT17+BJ29dqFD
      IX6ypjgdX7mnBJIgX/lfRwmAkBBS19qD5149hJYuq9ChkBlavyADO+8qEeTK/zpKAISEmA6L
      Dc++egjVzRahQyHTwLIMtqzMxX1rC8Cxwo7CUwIgJAT12Qbxi9eP4kxVm9ChkCmQSzk8eNtc
      bFg4K2hLPSdDCYCQEOVye/DSh2fw3tFKoUMhPjBoFHjqC4tQlBkXlE1evqAEQEgI8/I89p6o
      xovvlcHl9godDplAutmAb25bgsQYce3upgRASBi40tiFn792BO0Wm9ChkBEYAKuL07DzrpKA
      VvWcLkoAhISJXtsAfvfOSRwtbwJ9qoWnkkvx0Ma5uKUkU+hQJkQJgJAw4vF4sfdkDV7efRb2
      AZfQ4USsnORoPLG5FClxeqFDmRQlAELCUH17D158twznazqEDiWiKGUS3Lk0G/euzBPlkM9o
      lAAICVMutwe7j1fj1Y/Ow0Z3AwE3OyUaj945H5kJRtGs8rkZSgCEhDGe59HWbcWf95zD4QuN
      NDcQADq1/FoN/wzIpeK/6h+JEgAhEcDr5XGmqg0vfXgG9e29QocTFhgGWDc/A9vWFSBapxI6
      nGmhBEBIBHG6PPj4VA1e21eOHuuA0OGErMLMODy4oQgZITTcMx5KAIREIJvDiV1HruD9o1fQ
      b3cKHU5IYBggKyka29YWYF5WfEif+K+jBEBIBOu3D+K9I1ew50QNuvsdQocjShzLICc5GptX
      5GJ+TgJYNvRP/NdRAiCEwOZw4pOz9Xj/aCWaOvtAJwVAJuVQnGXGXUuzkZtmEkXxNn+jBEAI
      GeZ0e3C2qg27j1fjbHU7nC6P0CEFXYxehVVzU7G6OB1JJnHV7vE3SgCEkDF4nkdrlxWHzzfg
      k7P1aOjoEzqkgFLKJShIj8XqeWmYmxUPtSIyejBTAiCETMrp8qC6uRtHyhtx4nILWsOkG5lU
      wmJ2SgwW5yejNDcBMXpVWEzsTgUlAEKIzwZdbjR19OFkRQtOV7bNjdNZAAAAV0lEQVThSmMX
      PN7QOYXo1XIUZsahONuMubPiYdAowmpSd6ooARBCpsXr5WF1OHGpvhPnazpQXtuJ+vYeUSUE
      tUKK3FQTCjJiUZBuQmqcAVIJG3FX+hP5f/iXZGxyiURjAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
